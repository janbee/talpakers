{"version":3,"file":"static/js/615.d2ff0d10.chunk.js","mappings":"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","sources":["app/components/user-details/user-details.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport './user-details.component.scss';\nimport { Header, Icon, Label, Menu, Popup, Segment } from 'semantic-ui-react';\nimport { EarningsModel, UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport { groupBy, sumBy } from 'lodash';\nimport moment from 'moment';\nimport { useLocation } from 'react-router-dom';\nimport { Money } from '@utilities/utils';\nimport classNames from 'classnames';\nimport { forkJoin } from 'rxjs';\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n  yearTotalWithdrawals: number = 0;\n  userDetails?: UserDetailModel[] | null;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const emails = pathname.split('/').pop()?.replace('@', '');\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    const emailArr = emails?.split(',');\n    forkJoin([\n      API.getBetSummary({ 'email': { '$in': emailArr } }),\n      API.getBonuses({ 'email': { '$in': emailArr } }),\n      API.getWithdrawals({ 'email': { '$in': emailArr } }),\n      API.getUser({ 'email': { '$in': emailArr } }),\n    ]).subscribe(([betSummaryList, bonusList, withdrawalList, userDetails]) => {\n\n\n      const filteredBonusList = bonusList?.filter((item) => {\n        return (\n          item.TransactionStatus === 'Approved' &&\n          item.TransactionType === 'Bonus' &&\n          ['IMMEDIATE BONUS', 'Bonus'].includes(item.PaymentMethodInfo) &&\n          item.Amount >= 10\n        );\n      });\n\n\n      const filteredWithdrawalList = withdrawalList?.filter((item) => {\n        return [\n          'Approved',\n          'Pending',\n          'Sending to Processor',\n          'In Process',\n        ].includes(item.TransactionStatus);\n      });\n\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map(\n        (weekNumber) => {\n          const year = moment().format('YYYY');\n          const date = moment(year).add(weekNumber, 'weeks');\n          const mon = moment(date).format('MMM');\n          const monNumber = moment(date).format('M');\n          const startDate = moment(date)\n            .startOf('week')\n            .add(1, 'day')\n            .toISOString();\n          const endDate = moment(date).endOf('week').toISOString();\n\n          const weekStart = new Date(startDate);\n          const weekEnd = new Date(endDate);\n          weekStart.setUTCHours(0, 0, 0, 0);\n          weekEnd.setUTCHours(23, 59, 59, 999);\n\n\n          const filteredBetSum = betSummaryList?.filter((item) => {\n            return (\n              item.startDate === weekStart.toISOString() &&\n              item.endDate === weekEnd.toISOString() &&\n              item.year === parseInt(year, 10)\n            );\n          });\n\n\n          /*\n           * get bonus\n           * reverse to get the first occurrence not the latest\n           * */\n          const filteredBonus = emailArr?.map(email => {\n            return filteredBonusList?.reverse().find((item) => {\n              const TransactionDateTime = moment(\n                item.TransactionDateTime,\n              ).subtract(7, 'days');\n              return (\n                TransactionDateTime.isAfter(weekStart) &&\n                TransactionDateTime.isBefore(weekEnd) &&\n                item.email === email\n              );\n            });\n          }).filter(Boolean);\n\n\n          /*\n           * get withdrawal\n           * */\n          const foundWithdrawal = filteredWithdrawalList?.find((item) => {\n            const transactionDate = new Date(\n              item.TransactionDateTime.split('T')[0],\n            );\n            transactionDate.setUTCHours(0, 0, 0, 0);\n            const TransactionDateTime = moment(transactionDate.toISOString());\n\n            return (\n              TransactionDateTime.isSameOrAfter(weekStart) &&\n              TransactionDateTime.isSameOrBefore(weekEnd)\n            );\n          });\n\n          let winnings = 0;\n\n          const bonus = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.bonus || 0);\n          const totalStaked = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalStaked || 0);\n          const totalEarnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n          let approxWinnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.winnings || 0);\n\n\n          let playAbBonus = sumBy(filteredBonus, (foundBonus) => foundBonus?.Amount || 0);\n          if(filteredBonus?.length !== emailArr?.length){\n            playAbBonus = bonus;\n          } else {\n            approxWinnings = 0\n          }\n\n          if (filteredBonus?.length && filteredBetSum?.length) {\n            winnings =\n              playAbBonus + sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n          }\n\n\n\n\n          return {\n            _id: `${mon}-${weekNumber}`,\n            mon: monNumber + '-' + mon,\n            year,\n            startDate: weekStart.toISOString(),\n            endDate: weekEnd.toISOString(),\n            bonus: playAbBonus || bonus || 0,\n            totalStaked,\n            totalEarnings,\n            winnings,\n            approxWinnings,\n            loading: false,\n            fetch: 0,\n            title: mon,\n            withdrawal: foundWithdrawal,\n          };\n        },\n      );\n      const groupedDataList = groupBy(dataList, 'mon');\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split('-')[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'winnings');\n      });\n\n      const yearTotalWithdrawals = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'withdrawal.Amount');\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        yearTotalWithdrawals,\n        list: defaultList,\n        userDetails,\n      }));\n    });\n  }, [emails]);\n\n\n  const hasMultiUser = (emails?.split(',') || []).length > 1;\n  return (\n    <div\n      className={classNames({\n        'user-details-wrap': true,\n        'multi-users': hasMultiUser,\n      })}>\n      <Segment inverted>\n        <div className='ttl'>\n          {!hasMultiUser ? (<span>{emails}</span>) : <span>Multi Users View</span>}\n          {!hasMultiUser && (\n            <div className='row-wrap between'>\n              <Popup\n                on='hover'\n                basic\n                trigger={<Icon name='info circle' />}\n                position='bottom right'\n                mouseLeaveDelay={60000}\n              >\n                <Menu vertical>\n                  <Menu.Item header>\n                    <Header as='h3'>\n                      Year {moment().format('YYYY')} Details\n                    </Header>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Header as='h4'>Current Balance</Header>\n                    <p>\n                      <Label color='green'>\n                        {Money(\n                          state.userDetails?.[0].data?.userSession?.cash || 0,\n                        )}\n                      </Label>\n                    </p>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Header as='h4'>Available Cashout</Header>\n                    <p>\n                      <Label color='orange'>\n                        {Money(\n                          state.userDetails?.[0].data?.userSession?.cashout || 0,\n                        )}\n                      </Label>\n                    </p>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Header as='h4'>Total Earnings this year</Header>\n                    <p>\n                      <Label color='purple'>\n                        {Money(state.yearTotalWinnings)}\n                      </Label>\n                    </p>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Header as='h4'>Total Cashout this year</Header>\n                    <p>\n                      <Label color='red'>\n                        {' '}\n                        {Money(Math.abs(state.yearTotalWithdrawals || 0))}\n                      </Label>\n                    </p>\n                  </Menu.Item>\n                </Menu>\n              </Popup>\n            </div>\n          )}\n        </div>\n        <hr />\n        <div className='user-details-content-wrap'>\n          {state.list.map((mon) => {\n            const total = sumBy(mon.data, 'winnings');\n            return (\n              <div\n                key={mon.title}\n                className='mon-wrap'>\n                <div className='ttl-wrap'>\n                  <Header\n                    as='h3'\n                    inverted>\n                    {mon.title}\n                  </Header>\n                  <Header\n                    className={classNames({\n                      winnings: total > 0,\n                      losses: total < 0,\n                    })}\n                    as='h4'\n                    inverted\n                  >\n                    {Money(total)}\n                  </Header>\n                </div>\n                <hr />\n                <div className='week-wrap'>\n                  {mon.data.map((item) => {\n                    return (\n                      <div\n                        key={item._id}\n                        className='week'>\n                        {!!item.withdrawal && !hasMultiUser && (\n                          <Popup\n                            on='click'\n                            position='top center'\n                            trigger={<div className='has-withdrawal' />}\n                            flowing\n                          >\n                            <Popup.Header>\n                              Withdrawal (\n                              <span\n                                className={classNames({\n                                  'yellow-light':\n                                    item.withdrawal.TransactionStatus ===\n                                    'Pending',\n                                  'green-light':\n                                    item.withdrawal.TransactionStatus ===\n                                    'Approved',\n                                  'blue-light': [\n                                    'In Process',\n                                    'Sending to Processor',\n                                  ].includes(item.withdrawal.TransactionStatus),\n                                })}\n                              >\n                                {item.withdrawal.TransactionStatus}\n                              </span>\n                              )\n                            </Popup.Header>\n                            <Popup.Content>\n                              {`${item.withdrawal.PaymentMethodInfo} ${Money(\n                                item.withdrawal.Amount,\n                              )}`}\n                            </Popup.Content>\n                          </Popup>\n                        )}\n\n                        <div className='week-date'>\n                          <span>\n                            {moment(item.startDate).utc().format('ddd DD')} -{' '}\n                            {moment(item.endDate).utc().format('ddd DD')}\n                          </span>\n                        </div>\n                        <div className='week-content'>\n                          <div className='row-wrap'>\n                            <span>Staked</span>\n                            <span>{Money(item.totalStaked)}</span>\n                          </div>\n                          <div className='row-wrap'>\n                            <span>Earnings</span>\n                            <span>{Money(item.totalEarnings)}</span>\n                          </div>\n                          <div className='row-wrap'>\n                            <span>Bonus</span>\n                            <span>{Money(item.bonus)}</span>\n                          </div>\n\n                          {( item.approxWinnings > 0 && (\n                            <div className='row-wrap'>\n                              <span>Winnings</span>\n\n                              <Popup\n                                content='Approximate Earnings.'\n                                position='top center'\n                                trigger={\n                                  <span\n                                    className={classNames({\n                                      approx: true,\n                                    })}\n                                  >\n                                    {Money(item.approxWinnings)}\n                                  </span>\n                                }\n                              />\n                            </div>\n                          )) || (\n                            <div className='row-wrap'>\n                              <span>Winnings</span>\n                              <span\n                                className={classNames({\n                                  winnings: item.winnings > 0,\n                                  losses: item.winnings < 0,\n                                })}\n                              >\n                                {Money(item.winnings)}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","_createClass","_classCallCheck","loading","list","yearTotalWinnings","yearTotalWithdrawals","userDetails","UserDetailsComponent","memo","_pathname$split$pop","_state$userDetails","_state$userDetails$0$","_state$userDetails$0$2","_state$userDetails2","_state$userDetails2$","_state$userDetails2$$","emails","useLocation","pathname","split","pop","replace","_useState","useState","_useState2","_slicedToArray","state","setState","useEffect","prevState","_objectSpread","emailArr","forkJoin","API","getBetSummary","getBonuses","getWithdrawals","getUser","subscribe","_ref","_ref2","betSummaryList","bonusList","withdrawalList","filteredBonusList","filter","item","TransactionStatus","TransactionType","includes","PaymentMethodInfo","Amount","filteredWithdrawalList","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","filteredBetSum","parseInt","filteredBonus","email","reverse","find","TransactionDateTime","subtract","isAfter","isBefore","Boolean","foundWithdrawal","transactionDate","isSameOrAfter","isSameOrBefore","winnings","bonus","sumBy","betSummary","totalStaked","totalEarnings","approxWinnings","playAbBonus","foundBonus","length","_id","concat","fetch","title","withdrawal","groupedDataList","groupBy","defaultList","Object","key","data","hasMultiUser","_jsx","className","classNames","children","_jsxs","Segment","inverted","Popup","on","basic","trigger","Icon","name","position","mouseLeaveDelay","Menu","vertical","Item","header","Header","as","Label","color","Money","userSession","cash","cashout","Math","abs","total","losses","flowing","Content","utc","content","approx","ElementComponent","props","this","Dimmer","style","top","left","right","bottom","active","Loader"],"sourceRoot":""}