{"version":3,"file":"static/js/615.3f614df9.chunk.js","mappings":"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","sources":["app/components/user-details/user-details.component.tsx","app/components/user-details/user-settings.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\nimport './user-details.component.scss';\nimport { Header, Icon, Label, Menu, Popup, Segment, Sidebar, SidebarPushable, SidebarPusher } from 'semantic-ui-react';\nimport { EarningsModel, UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport { groupBy, sumBy } from 'lodash';\nimport moment from 'moment';\nimport { useLocation } from 'react-router-dom';\nimport { Money } from '@utilities/utils';\nimport classNames from 'classnames';\nimport { forkJoin } from 'rxjs';\nimport { UserSettingsComponent } from '@components/user-details/user-settings.component';\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n  yearTotalWithdrawals: number = 0;\n  userDetails?: UserDetailModel[] | null;\n  settingsOpen = false;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const emails = pathname.split('/').pop()?.replace('@', '');\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    const emailArr = emails?.split(',');\n    forkJoin([\n      API.getBetSummary({ email: { $in: emailArr } }),\n      API.getBonuses({ email: { $in: emailArr } }),\n      API.getWithdrawals({ email: { $in: emailArr } }),\n      API.getUser({ email: { $in: emailArr } }),\n    ]).subscribe(([betSummaryList, bonusList, withdrawalList, userDetails]) => {\n      const filteredBonusList = bonusList?.filter((item) => {\n        return (\n          item.TransactionStatus === 'Approved' &&\n          item.TransactionType === 'Bonus' &&\n          ['IMMEDIATE BONUS', 'Bonus'].includes(item.PaymentMethodInfo) &&\n          item.Amount >= 10\n        );\n      });\n\n      const filteredWithdrawalList = withdrawalList?.filter((item) => {\n        return [\n          'Approved',\n          'Pending',\n          'Sending to Processor',\n          'In Process',\n        ].includes(item.TransactionStatus);\n      });\n\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map(\n        (weekNumber) => {\n          const year = moment().format('YYYY');\n          const date = moment(year).add(weekNumber, 'weeks');\n          const mon = moment(date).format('MMM');\n          const monNumber = moment(date).format('M');\n          const startDate = moment(date)\n            .startOf('week')\n            .add(1, 'day')\n            .toISOString();\n          const endDate = moment(date).endOf('week').toISOString();\n\n          const weekStart = new Date(startDate);\n          const weekEnd = new Date(endDate);\n          weekStart.setUTCHours(0, 0, 0, 0);\n          weekEnd.setUTCHours(23, 59, 59, 999);\n\n          const filteredBetSum = betSummaryList?.filter((item) => {\n            return (\n              item.startDate === weekStart.toISOString() &&\n              item.endDate === weekEnd.toISOString() &&\n              item.year === parseInt(year, 10)\n            );\n          });\n\n          /*\n           * get bonus\n           * reverse to get the first occurrence not the latest\n           * */\n          const filteredBonus = emailArr\n            ?.map((email) => {\n              return filteredBonusList?.reverse().find((item) => {\n                const TransactionDateTime = moment(\n                  item.TransactionDateTime,\n                ).subtract(7, 'days');\n                return (\n                  TransactionDateTime.isAfter(weekStart) &&\n                  TransactionDateTime.isBefore(weekEnd) &&\n                  item.email === email\n                );\n              });\n            })\n            .filter(Boolean);\n\n          /*\n           * get withdrawal\n           * */\n          const foundWithdrawal = filteredWithdrawalList?.find((item) => {\n            const transactionDate = new Date(\n              item.TransactionDateTime.split('T')[0],\n            );\n            transactionDate.setUTCHours(0, 0, 0, 0);\n            const TransactionDateTime = moment(transactionDate.toISOString());\n\n            return (\n              TransactionDateTime.isSameOrAfter(weekStart) &&\n              TransactionDateTime.isSameOrBefore(weekEnd)\n            );\n          });\n\n          let winnings = 0;\n\n          const bonus = sumBy(\n            filteredBetSum,\n            (betSummary) => betSummary?.betSummary.bonus || 0,\n          );\n          const totalStaked = sumBy(\n            filteredBetSum,\n            (betSummary) => betSummary?.betSummary.totalStaked || 0,\n          );\n          const totalEarnings = sumBy(\n            filteredBetSum,\n            (betSummary) => betSummary?.betSummary.totalEarnings || 0,\n          );\n          let approxWinnings = sumBy(\n            filteredBetSum,\n            (betSummary) => betSummary?.betSummary.winnings || 0,\n          );\n\n          let playAbBonus = sumBy(\n            filteredBonus,\n            (foundBonus) => foundBonus?.Amount || 0,\n          );\n          if (filteredBonus?.length !== emailArr?.length) {\n            playAbBonus = bonus;\n          } else {\n            approxWinnings = 0;\n          }\n\n          if (filteredBonus?.length && filteredBetSum?.length) {\n            winnings =\n              playAbBonus +\n              sumBy(\n                filteredBetSum,\n                (betSummary) => betSummary?.betSummary.totalEarnings || 0,\n              );\n          }\n\n          return {\n            _id: `${mon}-${weekNumber}`,\n            mon: monNumber + '-' + mon,\n            year,\n            startDate: weekStart.toISOString(),\n            endDate: weekEnd.toISOString(),\n            bonus: playAbBonus || bonus || 0,\n            totalStaked,\n            totalEarnings,\n            winnings,\n            approxWinnings,\n            loading: false,\n            fetch: 0,\n            title: mon,\n            withdrawal: foundWithdrawal,\n          };\n        },\n      );\n      const groupedDataList = groupBy(dataList, 'mon');\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split('-')[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'winnings');\n      });\n\n      const yearTotalWithdrawals = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'withdrawal.Amount');\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        yearTotalWithdrawals,\n        list: defaultList,\n        userDetails,\n      }));\n    });\n  }, [emails]);\n\n  const handleSettingsClick = useCallback(() => {\n    console.log('gaga-------------------------------------', 123123);\n    setState(prevState => ({ ...prevState, settingsOpen: !state.settingsOpen }));\n  }, [state.settingsOpen]);\n\n  const hasMultiUser = (emails?.split(',') || []).length > 1;\n  return (\n    <div\n      className={classNames({\n        'user-details-wrap': true,\n        'multi-users': hasMultiUser,\n      })}\n    >\n      <SidebarPushable>\n        <Sidebar\n          animation='overlay'\n          onHide={handleSettingsClick}\n          visible={state.settingsOpen}\n          width={'wide'}\n        >\n          <UserSettingsComponent config={{ email: emails as string }} />\n        </Sidebar>\n\n        <SidebarPusher>\n          <Segment inverted>\n            <div className='ttl'>\n              {!hasMultiUser ? (\n                <div>\n                  <Icon\n                    onClick={handleSettingsClick}\n                    className={'pointer'}\n                    name={'bars'}\n                    size={'small'} />\n                  <span>{emails}</span>\n                </div>\n              ) : (\n                <span>Multi Users View</span>\n              )}\n              {!hasMultiUser && (\n                <div className='row-wrap between'>\n                  <Popup\n                    on='hover'\n                    basic\n                    trigger={<Icon name='info circle' size={'small'} className={'pointer'} />}\n                    position='bottom right'\n                    mouseLeaveDelay={60000}\n                  >\n                    <Menu vertical>\n                      <Menu.Item header>\n                        <Header as='h3'>\n                          Year {moment().format('YYYY')} Details\n                        </Header>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as='h4'>Current Balance</Header>\n                        <p>\n                          <Label color='green'>\n                            {Money(\n                              state.userDetails?.[0].data?.userSession?.cash || 0,\n                            )}\n                          </Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as='h4'>Available Cashout</Header>\n                        <p>\n                          <Label color='orange'>\n                            {Money(\n                              state.userDetails?.[0].data?.userSession?.cashout ||\n                              0,\n                            )}\n                          </Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as='h4'>Total Earnings this year</Header>\n                        <p>\n                          <Label color='purple'>\n                            {Money(state.yearTotalWinnings)}\n                          </Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as='h4'>Total Cashout this year</Header>\n                        <p>\n                          <Label color='red'>\n                            {' '}\n                            {Money(Math.abs(state.yearTotalWithdrawals || 0))}\n                          </Label>\n                        </p>\n                      </Menu.Item>\n                    </Menu>\n                  </Popup>\n                </div>\n              )}\n            </div>\n            <hr />\n            <div className='user-details-content-wrap'>\n              {state.list.map((mon) => {\n                const total = sumBy(mon.data, 'winnings');\n                return (\n                  <div\n                    key={mon.title}\n                    className='mon-wrap'>\n                    <div className='ttl-wrap'>\n                      <Header\n                        as='h3'\n                        inverted>\n                        {mon.title}\n                      </Header>\n                      <Header\n                        className={classNames({\n                          winnings: total > 0,\n                          losses: total < 0,\n                        })}\n                        as='h4'\n                        inverted\n                      >\n                        {Money(total)}\n                      </Header>\n                    </div>\n                    <hr />\n                    <div className='week-wrap'>\n                      {mon.data.map((item) => {\n                        return (\n                          <div\n                            key={item._id}\n                            className='week'>\n                            {!!item.withdrawal && !hasMultiUser && (\n                              <>\n                                {[\n                                  {\n                                    Pending: item.withdrawal.TransactionStatus === 'Pending',\n                                    Approved: item.withdrawal.TransactionStatus === 'Approved',\n                                    Processing: [\n                                      'In Process',\n                                      'Sending to Processor',\n                                    ].includes(item.withdrawal.TransactionStatus),\n                                  },\n                                ].map((status, index) => (\n                                  <Popup\n                                    key={index}\n                                    on='click'\n                                    position='top center'\n                                    trigger={\n                                      <div\n                                        className={classNames({\n                                          'has-withdrawal': true,\n                                          yellow: status.Pending,\n                                          green: status.Approved,\n                                          blue: status.Processing,\n                                        })}\n                                      />\n                                    }\n                                    flowing\n                                  >\n                                    <Popup.Header>\n                                      Withdrawal (\n                                      <span\n                                        className={classNames({\n                                          'yellow-light': status.Pending,\n                                          'green-light': status.Approved,\n                                          'blue-light': status.Processing,\n                                        })}\n                                      >\n                                    {item.withdrawal?.TransactionStatus}\n                                  </span>\n                                      )\n                                    </Popup.Header>\n                                    <Popup.Content>\n                                      {`${item.withdrawal\n                                        ?.PaymentMethodInfo} ${Money(\n                                        item.withdrawal?.Amount || 0,\n                                      )}`}\n                                    </Popup.Content>\n                                  </Popup>\n                                ))}\n                              </>\n                            )}\n\n                            <div className='week-date'>\n                          <span>\n                            {moment(item.startDate).utc().format('ddd DD')} -{' '}\n                            {moment(item.endDate).utc().format('ddd DD')}\n                          </span>\n                            </div>\n                            <div className='week-content'>\n                              <div className='row-wrap'>\n                                <span>Staked</span>\n                                <span>{Money(item.totalStaked)}</span>\n                              </div>\n                              <div className='row-wrap'>\n                                <span>Earnings</span>\n                                <span>{Money(item.totalEarnings)}</span>\n                              </div>\n                              <div className='row-wrap'>\n                                <span>Bonus</span>\n                                <span>{Money(item.bonus)}</span>\n                              </div>\n\n                              {(item.approxWinnings > 0 && (\n                                <div className='row-wrap'>\n                                  <span>Winnings</span>\n\n                                  <Popup\n                                    content='Approximate Earnings.'\n                                    position='top center'\n                                    trigger={\n                                      <span\n                                        className={classNames({\n                                          approx: true,\n                                        })}\n                                      >\n                                    {Money(item.approxWinnings)}\n                                  </span>\n                                    }\n                                  />\n                                </div>\n                              )) || (\n                                <div className='row-wrap'>\n                                  <span>Winnings</span>\n                                  <span\n                                    className={classNames({\n                                      winnings: item.winnings > 0,\n                                      losses: item.winnings < 0,\n                                    })}\n                                  >\n                                {Money(item.winnings)}\n                              </span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <ElementComponent loading={state.loading} />\n          </Segment>\n        </SidebarPusher>\n\n\n      </SidebarPushable>\n    </div>\n  );\n});\n","import React, { ChangeEvent, memo, useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon, Input, Segment } from 'semantic-ui-react';\nimport { API } from '@services/api.service';\nimport { UserDetailModel } from '@models/custom.models';\nimport { mergeMap } from 'rxjs';\nimport { get, omit, set } from 'lodash';\nimport moment from 'moment';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\n\ninterface Config {\n  isOpen: boolean;\n  email: string;\n  password: string;\n}\n\ninterface Props {\n  config: {\n    email: string;\n  };\n}\n\nclass State {\n  config: Config = {\n    isOpen: false,\n    email: '',\n    password: '',\n  };\n  loading = false;\n\n  userDetails: UserDetailModel = {} as UserDetailModel;\n\n  constructor(props: Props) {\n    Object.assign(this.config, props.config);\n  }\n}\n\nexport const UserSettingsComponent = memo((props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n\n  useEffect(() => {\n    //setState(prevState => ({ ...prevState, config: props.config }));\n    setState(prevState => ({ ...prevState, config: { ...prevState.config, ...props.config } }));\n  }, [props]);\n\n  const handleUpdateClick = useCallback(() => {\n    console.log('gaga----------------------state.config.email---------------', state.config);\n    setState(prevState => ({ ...prevState, loading: true }));\n    API.$RealmDB.login(state.config.email, state.config.password).pipe(mergeMap(() => {\n\n      return API.upsertUserData({\n        ...state.userDetails,\n        _id: state.config.email,\n      } as UserDetailModel);\n    })).subscribe(() => {\n      setState(prevState => ({ ...prevState, loading: false }));\n    });\n  }, [state.config]);\n\n\n  const handleOnInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setState(prevState => ({ ...prevState, config: { ...prevState.config, password: e.target.value } }));\n  }, []);\n\n\n  const handleUserDetailModelUpdate = useCallback((e: React.SyntheticEvent<HTMLElement>, data: any) => {\n    e.preventDefault();\n    const value = data['data-value'];\n\n    Object.keys(value).forEach(key => {\n\n      const prevValue = get(state.userDetails, key);\n      const nextValue = value[key];\n      if (key === 'updatedAt' && !!prevValue) {\n        delete state.userDetails.updatedAt;\n        Object.assign(state.userDetails, omit(state.userDetails, key));\n      } else if (prevValue !== nextValue) {\n        set(state.userDetails, key, value[key]);\n      } else {\n        Object.assign(state.userDetails, omit(state.userDetails, key));\n      }\n    });\n\n    console.log('gaga------------------------------------', JSON.stringify(state.userDetails, null, 2));\n\n    setState(prevState => ({ ...prevState, userDetails: state.userDetails }));\n\n  }, [state.userDetails]);\n\n  const handleRemoveFocus = useCallback((e: ChangeEvent<HTMLElement>, data: any) => {\n    e.preventDefault();\n    e.target.blur();\n  }, []);\n\n  return <div\n    className={classNames({\n      'settings-wrap': true,\n      open: state.config.isOpen,\n    })}>\n    <Segment inverted>\n      <span className={'ttl'}>Settings</span>\n      <hr />\n\n      <div className={'content'}>\n        <div className={'content-item'}>\n          <span>For Account</span>\n          <span>{state.config.email}</span>\n        </div>\n        <div className={'content-item'}>\n          <span>Change Time</span>\n          <Button\n            inverted\n            color='green'\n            size={'small'}\n            circular\n            active={!!state.userDetails.updatedAt}\n            data-value={{ 'updatedAt': moment().subtract(1, 'hour').toDate() }}\n            onClick={handleUserDetailModelUpdate}\n            onMouseOut={handleRemoveFocus}>\n            Yes\n          </Button>\n        </div>\n        <div className={'content-item'}>\n          <span>Set Bet</span>\n          <div className={'btn-wrap'}>\n            <Button\n              tabIndex={-1}\n              inverted\n              color='orange'\n              size={'small'}\n              circular\n              data-value={{ 'data.settings.bet': '5' }}\n              active={state.userDetails.data?.settings?.bet === '5'}\n              onClick={handleUserDetailModelUpdate}\n              onMouseOut={handleRemoveFocus}>\n              5\n            </Button>\n            <Button\n              tabIndex={-1}\n              inverted\n              color='yellow'\n              size={'small'}\n              circular\n              data-value={{ 'data.settings.bet': '15' }}\n              active={state.userDetails.data?.settings?.bet === '15'}\n              onClick={handleUserDetailModelUpdate}\n              onMouseOut={handleRemoveFocus}>\n              15\n            </Button>\n            <Button\n              tabIndex={-1}\n              inverted\n              color='green'\n              size={'small'}\n              circular\n              active={state.userDetails.data?.settings?.bet === '25'}\n              data-value={{ 'data.settings.bet': '25' }}\n              onClick={handleUserDetailModelUpdate}\n              onMouseOut={handleRemoveFocus}>\n              25\n            </Button>\n          </div>\n        </div>\n\n      </div>\n      <hr />\n      <div className={'footer'}>\n        <Input\n          iconPosition='left'\n          placeholder='Password'>\n          <Icon name='lock' />\n\n          <input\n            placeholder={'Password'}\n            value={state.config.password}\n            onInput={handleOnInput}\n          />\n        </Input>\n        <Button\n          onClick={handleUpdateClick}>Update</Button>\n      </div>\n    </Segment>\n    <ElementComponent loading={state.loading} />\n  </div>;\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","_createClass","_classCallCheck","loading","list","yearTotalWinnings","yearTotalWithdrawals","userDetails","settingsOpen","UserDetailsComponent","memo","_pathname$split$pop","_state$userDetails","_state$userDetails$0$","_state$userDetails$0$2","_state$userDetails2","_state$userDetails2$","_state$userDetails2$$","emails","useLocation","pathname","split","pop","replace","_useState","useState","_useState2","_slicedToArray","state","setState","useEffect","prevState","_objectSpread","emailArr","forkJoin","API","getBetSummary","email","$in","getBonuses","getWithdrawals","getUser","subscribe","_ref","_ref2","betSummaryList","bonusList","withdrawalList","filteredBonusList","filter","item","TransactionStatus","TransactionType","includes","PaymentMethodInfo","Amount","filteredWithdrawalList","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","filteredBetSum","parseInt","filteredBonus","reverse","find","TransactionDateTime","subtract","isAfter","isBefore","Boolean","foundWithdrawal","transactionDate","isSameOrAfter","isSameOrBefore","winnings","bonus","sumBy","betSummary","totalStaked","totalEarnings","approxWinnings","playAbBonus","foundBonus","length","_id","concat","fetch","title","withdrawal","groupedDataList","groupBy","defaultList","Object","key","data","handleSettingsClick","useCallback","console","log","hasMultiUser","_jsx","className","classNames","children","_jsxs","SidebarPushable","Sidebar","animation","onHide","visible","width","UserSettingsComponent","config","SidebarPusher","Segment","inverted","Icon","onClick","name","size","Popup","on","basic","trigger","position","mouseLeaveDelay","Menu","vertical","Item","header","Header","as","Label","color","Money","userSession","cash","cashout","Math","abs","total","losses","_Fragment","Pending","Approved","Processing","status","index","_item$withdrawal","_item$withdrawal2","_item$withdrawal3","yellow","green","blue","flowing","Content","utc","content","approx","ElementComponent","props","isOpen","password","assign","this","_state$userDetails$da","_state$userDetails$da2","_state$userDetails$da3","_state$userDetails$da4","_state$userDetails$da5","_state$userDetails$da6","handleUpdateClick","$RealmDB","login","pipe","mergeMap","upsertUserData","handleOnInput","e","target","value","handleUserDetailModelUpdate","preventDefault","forEach","prevValue","get","nextValue","updatedAt","omit","set","JSON","stringify","handleRemoveFocus","blur","open","Button","circular","active","toDate","onMouseOut","tabIndex","settings","bet","Input","iconPosition","placeholder","onInput","Dimmer","style","top","left","right","bottom","Loader"],"sourceRoot":""}