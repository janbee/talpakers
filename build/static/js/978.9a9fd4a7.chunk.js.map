{"version":3,"file":"static/js/978.9a9fd4a7.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport \"./users.component.scss\";\nimport { Icon, Segment, Table } from \"semantic-ui-react\";\nimport { useApi, useCallbackMemo } from \"@utilities/utils\";\nimport { UserModel } from \"@models/custom.models\";\nimport { API } from \"@services/api.service\";\nimport moment from \"moment\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { ElementComponent } from \"@app/shared/component/element-loader.component\";\nimport classNames from \"classnames\";\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<UserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const currentLocation = JSON.stringify(window.location.href);\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo(\n    (user: UserModel) => {\n      console.log(\"gaga-------------------------------------\", user);\n      navigate(`@${user._id}`, {\n        relative: \"route\",\n        replace: currentLocation.includes(\"@\"),\n      });\n    },\n    [navigate],\n  );\n\n  const selected = currentLocation\n    .replaceAll('\"', \"\")\n    .split(\"/\")\n    .pop()\n    ?.replace(\"@\", \"\");\n\n  console.log(\n    \"gaga-------------------------------------render UsersComponent\",\n    selected,\n  );\n  return (\n    <div className=\"users-wrap\">\n      <Segment inverted>\n        <div className=\"row-wrap between ttl-wrap\">\n          <span className=\"ttl\">Users</span>\n          <Icon onClick={state.reload} name=\"refresh\" />\n        </div>\n        <hr />\n        <div className=\"tbl-wrap\">\n          <Table celled striped selectable inverted>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Email</Table.HeaderCell>\n                <Table.HeaderCell>Status</Table.HeaderCell>\n                <Table.HeaderCell>Version</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"right\">Active</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {state.data?.map((user) => {\n                const tz = new Date().getTimezoneOffset() * 60000;\n                const today = new Date(new Date().getTime() - tz);\n                today.setUTCHours(0, 0, 0, 0);\n\n                const currentWeekDay = today.getDay();\n\n                const forWeekStart = new Date(today);\n                forWeekStart.setUTCHours(0, 0, 0, 0);\n                forWeekStart.setDate(today.getDate() - currentWeekDay);\n\n                const weekStart = new Date(forWeekStart);\n                weekStart.setUTCHours(0, 0, 0, 0);\n\n                const forWeekEnd = new Date(weekStart);\n                forWeekEnd.setUTCHours(0, 0, 0, 0);\n                forWeekEnd.setDate(weekStart.getDate() + 6);\n\n                const weekEnd = new Date(forWeekEnd);\n                weekEnd.setUTCHours(23, 59, 59, 999);\n\n                /*console.log(\n                  \"gaga------------------------------------\",\n                  JSON.stringify(\n                    {\n                      u: user._id,\n                      web:\n                        weekStart.toISOString() +\n                        \" --- \" +\n                        weekEnd.toISOString(),\n                      app: user.data?.weekStatus?.startDate,\n                      today,\n                      today2: new Date(),\n                    },\n                    null,\n                    2,\n                  ),\n                );*/\n\n                const inProgress = user.data?.weekStatus?.done === false;\n                const lastUpdate = moment(user.updatedAt || user.createdAt);\n                const duration = moment.duration(lastUpdate.diff(Date.now()));\n                const minutesPassed = Math.abs(duration.asMinutes());\n                let isIdle = false;\n                if (inProgress && minutesPassed >= 30) {\n                  isIdle = true;\n                }\n\n                return (\n                  <Table.Row\n                    className={classNames({\n                      selected: user._id === selected,\n                    })}\n                    key={user._id}\n                    onClick={handleUserDetails(user)}\n                  >\n                    <Table.Cell collapsing>\n                      <span>{user._id}</span>\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span\n                        className={classNames({\n                          status: true,\n                          done: user.data?.weekStatus?.done === true,\n                          \"in-progress\": inProgress,\n                          unknown: user.data?.weekStatus?.done === undefined,\n                          waiting:\n                            weekStart.toISOString() !==\n                              user.data?.weekStatus?.startDate || isIdle,\n                        })}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n                    <Table.Cell textAlign=\"right\">\n                      {lastUpdate.fromNow()}\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"100\">\n                  Total Users {state.data?.length}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;"],"names":["UsersComponent","memo","_currentLocation$repl","_state$data","_state$data2","state","useApi","API","getUsers","withLoading","currentLocation","JSON","stringify","window","location","href","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","console","log","concat","_id","relative","replace","includes","selected","replaceAll","split","pop","_jsxs","className","children","Segment","inverted","_jsx","Icon","onClick","reload","name","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","Body","data","map","_user$data","_user$data$weekStatus","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data4","_user$data4$weekStatu","_user$data5","tz","Date","getTimezoneOffset","today","getTime","setUTCHours","currentWeekDay","getDay","forWeekStart","setDate","getDate","weekStart","forWeekEnd","inProgress","weekStatus","done","lastUpdate","moment","updatedAt","createdAt","duration","diff","now","minutesPassed","Math","abs","asMinutes","isIdle","classNames","Cell","collapsing","status","unknown","undefined","waiting","toISOString","startDate","version","fromNow","Footer","colSpan","length","ElementComponent","loading","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","_slicedToArray","setState","useEffect","prevState","_objectSpread","Dimmer","style","position","top","left","right","bottom","active","Loader","TableBody","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","size","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","index"],"sourceRoot":""}