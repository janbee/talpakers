{"version":3,"file":"static/js/978.1df51540.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/map.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport \"./users.component.scss\";\nimport { Segment, Table } from \"semantic-ui-react\";\nimport { useApi, useCallbackMemo } from \"@utilities/utils\";\nimport { UserModel } from \"@models/custom.models\";\nimport { API } from \"@services/api.service\";\nimport moment from \"moment\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<UserModel[]>(API.getUsers());\n\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo((user: UserModel) => {\n    console.log(\n      \"gaga-------------------------------------\",\n      user,\n      JSON.stringify(window.location.href),\n    );\n    const currentLocation = JSON.stringify(window.location.href);\n\n    navigate(`@${user._id}`, {\n      relative: \"route\",\n      replace: currentLocation.includes(\"@\"),\n    });\n  }, []);\n\n  if (state.loading) return null;\n\n  return (\n    <div className=\"users-wrap\">\n      <Segment inverted>\n        <div className=\"ttl\">Users</div>\n        <hr/>\n        <Table celled striped selectable inverted>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"right\">Active</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {state.data?.map((user) => {\n              return (\n                <Table.Row key={user._id} onClick={handleUserDetails(user)}>\n                  <Table.Cell collapsing>{user._id}</Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {moment(user.updatedAt || user.createdAt).fromNow()}\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"100\">\n                Total Users {state.data?.length}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;"],"names":["UsersComponent","memo","_state$data","_state$data2","state","useApi","API","getUsers","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","console","log","JSON","stringify","window","location","href","currentLocation","concat","_id","relative","replace","includes","loading","_jsxs","className","children","Segment","inverted","_jsx","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","Body","data","map","onClick","Cell","collapsing","moment","updatedAt","createdAt","fromNow","Footer","colSpan","length","Outlet","collection","iteratee","index","result","isArrayLike","Array","baseEach","value","key","isArray","arrayMap","baseMap","baseIteratee","TableBody","props","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","active","content","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","size","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement"],"sourceRoot":""}