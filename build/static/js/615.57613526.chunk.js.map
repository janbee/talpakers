{"version":3,"file":"static/js/615.57613526.chunk.js","mappings":"kdAWgC,IAE1BA,GAAKC,EAAAA,EAAAA,IAAA,SAAAD,KAAAE,EAAAA,EAAAA,GAAA,KAAAF,GAAA,KACTG,SAAU,EAAK,KACfC,KAAmD,GAAG,KACtDC,kBAA4B,EAAE,KAC9BC,qBAA+B,EAAE,KACjCC,iBAAW,KAGAC,GAAuBC,EAAAA,EAAAA,OAAK,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEvCC,EAAiC,QAA5BP,GADUQ,EAAAA,EAAAA,MAAbC,SACeC,MAAM,KAAKC,aAAK,IAAAX,OAAA,EAAzBA,EAA2BY,QAAQ,IAAK,IACtDC,GAA0BC,EAAAA,EAAAA,UAAgB,IAAIxB,GAAQyB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAmJtB,OAjJAI,EAAAA,EAAAA,YAAU,WACRD,GAAS,SAACE,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAS,IAAE3B,SAAS,GAAI,KAEtD6B,EAAAA,EAAAA,GAAS,CACPC,EAAAA,EAAIC,cAAc,CAAEjB,MAAAA,IACpBgB,EAAAA,EAAIE,WAAW,CAAElB,MAAAA,IACjBgB,EAAAA,EAAIG,eAAe,CAAEnB,MAAAA,IACrBgB,EAAAA,EAAII,QAAQ,CAAEpB,MAAAA,MACbqB,WAAU,SAAAC,GAA+D,IAADC,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAA5DE,EAAcD,EAAA,GAAEE,EAASF,EAAA,GAAEG,EAAcH,EAAA,GAAEjC,EAAWiC,EAAA,GAC7DI,EAA6B,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWG,QAAO,SAACC,GAC3C,MAC6B,aAA3BA,EAAKC,mBACoB,UAAzBD,EAAKE,iBACsB,UAA3BF,EAAKG,iBAET,IACMC,EAAuC,OAAdP,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAO,SAACC,GACrD,MAAO,CAAC,WAAY,UAAW,uBAAwB,cAAcK,SACnEL,EAAKC,kBAET,IACAK,QAAQC,IACN,qDACAT,GAEFQ,QAAQC,IACN,0DACAH,GAGF,IAAMI,EAAWC,MAAMC,KAAKD,MAAME,MAASC,kBAAkBC,QAAQC,KACnE,SAACC,GACC,IAAMC,EAAOL,MAASM,OAAO,QACvBC,EAAOP,IAAOK,GAAMG,IAAIJ,EAAY,SACpCK,EAAMT,IAAOO,GAAMD,OAAO,OAC1BI,EAAYV,IAAOO,GAAMD,OAAO,KAChCK,EAAYX,IAAOO,GACtBK,QAAQ,QACRJ,IAAI,EAAG,OACPK,cACGC,EAAUd,IAAOO,GAAMQ,MAAM,QAAQF,cAErCG,EAAY,IAAIC,KAAKN,GACrBO,EAAU,IAAID,KAAKH,GACzBE,EAAUG,YAAY,EAAG,EAAG,EAAG,GAC/BD,EAAQC,YAAY,GAAI,GAAI,GAAI,KAEhC,IAAMC,EAA2B,OAAdpC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,MAAK,SAAChC,GACvC,OACEA,EAAKsB,YAAcK,EAAUH,eAC7BxB,EAAKyB,UAAYI,EAAQL,eACzBxB,EAAKgB,OAASiB,SAASjB,EAAM,GAEjC,IAKMkB,EAA8B,OAAjBpC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBkC,MAAK,SAAChC,GAC1C,IAAMmC,EAAsBxB,IAC1BX,EAAKmC,qBACLC,SAAS,EAAG,QACd,OACED,EAAoBE,QAAQV,IAC5BQ,EAAoBG,SAAST,EAEjC,IAKMU,EAAwC,OAAtBnC,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwB4B,MAAK,SAAChC,GACpD,IAAMwC,EAAkB,IAAIZ,KAC1B5B,EAAKmC,oBAAoB7D,MAAM,KAAK,IAEtCkE,EAAgBV,YAAY,EAAG,EAAG,EAAG,GACrC,IAAMK,EAAsBxB,IAAO6B,EAAgBhB,eAEnD,OACEW,EAAoBM,cAAcd,IAClCQ,EAAoBO,eAAeb,EAEvC,IAEIc,EAAW,EAOf,OALIT,GAAcH,IAChBY,EACET,EAAWU,SAAoB,OAAVb,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWc,gBAAiB,IAG1D,CACLC,IAAI,GAADC,OAAK3B,EAAG,KAAA2B,OAAIhC,GACfK,IAAKC,EAAY,IAAMD,EACvBJ,KAAAA,EACAM,UAAWK,EAAUH,cACrBC,QAASI,EAAQL,cACjBwB,OAAiB,OAAVd,QAAU,IAAVA,OAAU,EAAVA,EAAYU,UAAoB,OAAVb,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWiB,QAAS,EAC7DC,aAAuB,OAAVlB,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWkB,cAAe,EACnDJ,eAAyB,OAAVd,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWc,gBAAiB,EACvDF,SAAAA,EACAO,gBAA0B,OAAVnB,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWY,WAAY,EACnDtF,SAAS,EACT8F,MAAO,EACPC,MAAOhC,EACPiC,WAAYd,EAEhB,IAEIe,GAAkBC,EAAAA,EAAAA,SAAQ/C,EAAU,OACpCgD,EAAcC,OAAO5C,KAAKyC,GAAiBxC,KAAI,SAAC4C,GACpD,MAAO,CACLN,MAAOM,EAAIpF,MAAM,KAAK,GACtBqF,KAAML,EAAgBI,GAE1B,IAEApD,QAAQC,IACN,uDACAiD,GAGF,IAAMjG,GAAoBqG,EAAAA,EAAAA,OAAMJ,GAAa,SAACxD,GAC5C,OAAO4D,EAAAA,EAAAA,OAAM5D,EAAK2D,KAAM,WAC1B,IAEMnG,GAAuBoG,EAAAA,EAAAA,OAAMJ,GAAa,SAACxD,GAC/C,OAAO4D,EAAAA,EAAAA,OAAM5D,EAAK2D,KAAM,oBAC1B,IAEArD,QAAQC,IACN,uDACA9C,GAEFqB,GAAS,SAACE,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZ3B,SAAS,EACTE,kBAAAA,EACAC,qBAAAA,EACAF,KAAMkG,EACN/F,YAAAA,GAAW,GAEf,GACF,GAAG,CAACU,KAGF0F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAACC,UAAQ,EAAAH,SAAA,EACfC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,QAAAE,SAAO5F,KACP0F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CACJC,GAAG,QACHC,OAAK,EACLC,SAAST,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CAACC,KAAK,gBACpBC,SAAS,eACTC,gBAAiB,IAAMX,UAEvBC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,UAAQ,EAAAb,SAAA,EACZF,EAAAA,EAAAA,KAACc,EAAAA,EAAKE,KAAI,CAACC,QAAM,EAAAf,UACfC,EAAAA,EAAAA,MAACe,EAAAA,EAAM,CAACC,GAAG,KAAIjB,SAAA,CAAC,QACRpD,MAASM,OAAO,QAAQ,iBAGlC+C,EAAAA,EAAAA,MAACW,EAAAA,EAAKE,KAAI,CAAAd,SAAA,EACRF,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,GAAG,KAAIjB,SAAC,qBAChBF,EAAAA,EAAAA,KAAA,KAAAE,UACEF,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,MAAM,QAAOnB,UACjBoB,EAAAA,EAAAA,KACkB,QAAjBtH,EAAAgB,EAAMpB,mBAAW,IAAAI,GAAU,QAAVC,EAAjBD,EAAoB,GAAG8F,YAAI,IAAA7F,GAAa,QAAbC,EAA3BD,EAA6BsH,mBAAW,IAAArH,OAAvB,EAAjBA,EAA0CsH,OAAQ,WAK1DrB,EAAAA,EAAAA,MAACW,EAAAA,EAAKE,KAAI,CAAAd,SAAA,EACRF,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,GAAG,KAAIjB,SAAC,uBAChBF,EAAAA,EAAAA,KAAA,KAAAE,UACEF,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,MAAM,SAAQnB,UAClBoB,EAAAA,EAAAA,KACkB,QAAjBnH,EAAAa,EAAMpB,mBAAW,IAAAO,GAAU,QAAVC,EAAjBD,EAAoB,GAAG2F,YAAI,IAAA1F,GAAa,QAAbC,EAA3BD,EAA6BmH,mBAAW,IAAAlH,OAAvB,EAAjBA,EAA0CoH,UAAW,WAK7DtB,EAAAA,EAAAA,MAACW,EAAAA,EAAKE,KAAI,CAAAd,SAAA,EACRF,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,GAAG,KAAIjB,SAAC,8BAChBF,EAAAA,EAAAA,KAAA,KAAAE,UACEF,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,MAAM,SAAQnB,UAClBoB,EAAAA,EAAAA,IAAMtG,EAAMtB,2BAInByG,EAAAA,EAAAA,MAACW,EAAAA,EAAKE,KAAI,CAAAd,SAAA,EACRF,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,GAAG,KAAIjB,SAAC,6BAChBF,EAAAA,EAAAA,KAAA,KAAAE,UACEC,EAAAA,EAAAA,MAACiB,EAAAA,EAAK,CAACC,MAAM,MAAKnB,SAAA,CACf,KACAoB,EAAAA,EAAAA,IAAMI,KAAKC,IAAI3G,EAAMrB,sBAAwB,uBAQ5DqG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SACvClF,EAAMvB,KAAKwD,KAAI,SAACM,GACf,IAAMqE,GAAQ7B,EAAAA,EAAAA,OAAMxC,EAAIuC,KAAM,YAC9B,OACEK,EAAAA,EAAAA,MAAA,OAEEF,UAAU,WAAUC,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,GAAG,KACHd,UAAQ,EAAAH,SACP3C,EAAIgC,SAEPS,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLjB,UAAW4B,IAAW,CACpB/C,SAAU8C,EAAQ,EAClBE,OAAQF,EAAQ,IAElBT,GAAG,KACHd,UAAQ,EAAAH,UAEPoB,EAAAA,EAAAA,IAAMM,SAGX5B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB3C,EAAIuC,KAAK7C,KAAI,SAACd,GACb,OACEgE,EAAAA,EAAAA,MAAA,OAEEF,UAAU,OAAMC,SAAA,GACb/D,EAAKqD,aACNW,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CACJC,GAAG,QACHK,SAAS,aACTH,SAAST,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBACxB8B,SAAO,EAAA7B,SAAA,EAEPC,EAAAA,EAAAA,MAACG,EAAAA,EAAMY,OAAM,CAAAhB,SAAA,CAAC,gBAEZF,EAAAA,EAAAA,KAAA,QACEC,UAAW4B,IAAW,CACpB,eAEE,YADA1F,EAAKqD,WAAWpD,kBAElB,cAEE,aADAD,EAAKqD,WAAWpD,kBAElB,aAAc,CAAC,aAAc,wBAAwBI,SAASL,EAAKqD,WAAWpD,qBAC7E8D,SAEF/D,EAAKqD,WAAWpD,oBACZ,QAGT4D,EAAAA,EAAAA,KAACM,EAAAA,EAAM0B,QAAO,CAAA9B,SAAA,GAAAhB,OACR/C,EAAKqD,WAAWlD,kBAAiB,KAAA4C,QAAIoC,EAAAA,EAAAA,IACvCnF,EAAKqD,WAAWT,eAMxBiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACGpD,IAAOX,EAAKsB,WAAWwE,MAAM7E,OAAO,UAAU,KAAG,IACjDN,IAAOX,EAAKyB,SAASqE,MAAM7E,OAAO,gBAGvC+C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YACNF,EAAAA,EAAAA,KAAA,QAAAE,UAAOoB,EAAAA,EAAAA,IAAMnF,EAAKiD,mBAEpBe,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNF,EAAAA,EAAAA,KAAA,QAAAE,UAAOoB,EAAAA,EAAAA,IAAMnF,EAAK6C,qBAEpBmB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WACNF,EAAAA,EAAAA,KAAA,QAAAE,UAAOoB,EAAAA,EAAAA,IAAMnF,EAAKgD,YAGA,IAAlBhD,EAAK2C,UAAkB3C,EAAKiD,YAAc,IAC1Ce,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAENF,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CACJ4B,QAAQ,wBACRtB,SAAS,aACTH,SACET,EAAAA,EAAAA,KAAA,QACEC,UAAW4B,IAAW,CACpBM,QAAQ,IACPjC,UAEFoB,EAAAA,EAAAA,IAAMnF,EAAKkD,yBAMpBc,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNF,EAAAA,EAAAA,KAAA,QACEC,UAAW4B,IAAW,CACpB/C,SAAU3C,EAAK2C,SAAW,EAC1BgD,OAAQ3F,EAAK2C,SAAW,IACvBoB,UAEFoB,EAAAA,EAAAA,IAAMnF,EAAK2C,oBAjFf3C,EAAK8C,IAwFhB,QAhHG1B,EAAIgC,MAoHf,OAEFS,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAAC5I,QAASwB,EAAMxB,cAIzC,I,+JC/VMH,GAAKC,EAAAA,EAAAA,IAIT,SAAAD,EAAYgJ,IAAc9I,EAAAA,EAAAA,GAAA,KAAAF,GAAA,KAH1BG,SAAU,EAAM,KAChB0I,QAAW,GAGTI,KAAK9I,QAAU6I,EAAM7I,QACrB8I,KAAKJ,QAAUG,EAAMH,OACvB,IAGWE,EAAmB,SAACC,GAC/B,IAAAzH,GAA0BC,EAAAA,EAAAA,UAAgB,IAAIxB,EAAMgJ,IAAOvH,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAMtB,OAJAI,EAAAA,EAAAA,YAAU,WACRD,GAAS,SAACE,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAS,IAAE3B,QAAS6I,EAAM7I,SAAO,GACjE,GAAG,CAAC6I,EAAM7I,WAGRwG,EAAAA,EAAAA,KAACuC,EAAAA,GAAMnH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLoH,MAAO,CACL5B,SAAU,WACV6B,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,IAEL5H,EAAMxB,QAAU,CAAEqJ,QAAQ,GAAS,CAAC,GAAC,IAAA3C,UAE1CF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,MAGb,C","sources":["app/components/user-details/user-details.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport './user-details.component.scss';\nimport { Header, Icon, Label, Menu, Popup, Segment } from 'semantic-ui-react';\nimport { EarningsModel, UserModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport { groupBy, sumBy } from 'lodash';\nimport moment from 'moment';\nimport { useLocation } from 'react-router-dom';\nimport { Money } from '@utilities/utils';\nimport classNames from 'classnames';\nimport { forkJoin } from 'rxjs';\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n  yearTotalWithdrawals: number = 0;\n  userDetails?: UserModel[] | null;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const email = pathname.split('/').pop()?.replace('@', '');\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    forkJoin([\n      API.getBetSummary({ email }),\n      API.getBonuses({ email }),\n      API.getWithdrawals({ email }),\n      API.getUser({ email }),\n    ]).subscribe(([betSummaryList, bonusList, withdrawalList, userDetails]) => {\n      const filteredBonusList = bonusList?.filter((item) => {\n        return (\n          item.TransactionStatus === 'Approved' &&\n          item.TransactionType === 'Bonus' &&\n          item.PaymentMethodInfo === 'Bonus'\n        );\n      });\n      const filteredWithdrawalList = withdrawalList?.filter((item) => {\n        return ['Approved', 'Pending', 'Sending to Processor', 'In Process'].includes(\n          item.TransactionStatus,\n        );\n      });\n      console.log(\n        'gaga-------------------------------bonusList------',\n        filteredBonusList,\n      );\n      console.log(\n        'gaga-------------------------------withdrawalList------',\n        filteredWithdrawalList,\n      );\n\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map(\n        (weekNumber) => {\n          const year = moment().format('YYYY');\n          const date = moment(year).add(weekNumber, 'weeks');\n          const mon = moment(date).format('MMM');\n          const monNumber = moment(date).format('M');\n          const startDate = moment(date)\n            .startOf('week')\n            .add(1, 'day')\n            .toISOString();\n          const endDate = moment(date).endOf('week').toISOString();\n\n          const weekStart = new Date(startDate);\n          const weekEnd = new Date(endDate);\n          weekStart.setUTCHours(0, 0, 0, 0);\n          weekEnd.setUTCHours(23, 59, 59, 999);\n\n          const betSummary = betSummaryList?.find((item) => {\n            return (\n              item.startDate === weekStart.toISOString() &&\n              item.endDate === weekEnd.toISOString() &&\n              item.year === parseInt(year, 10)\n            );\n          });\n\n          /*\n           * get bonus\n           * */\n          const foundBonus = filteredBonusList?.find((item) => {\n            const TransactionDateTime = moment(\n              item.TransactionDateTime,\n            ).subtract(7, 'days');\n            return (\n              TransactionDateTime.isAfter(weekStart) &&\n              TransactionDateTime.isBefore(weekEnd)\n            );\n          });\n\n          /*\n           * get withdrawal\n           * */\n          const foundWithdrawal = filteredWithdrawalList?.find((item) => {\n            const transactionDate = new Date(\n              item.TransactionDateTime.split('T')[0],\n            );\n            transactionDate.setUTCHours(0, 0, 0, 0);\n            const TransactionDateTime = moment(transactionDate.toISOString());\n\n            return (\n              TransactionDateTime.isSameOrAfter(weekStart) &&\n              TransactionDateTime.isSameOrBefore(weekEnd)\n            );\n          });\n\n          let winnings = 0;\n\n          if (foundBonus && betSummary) {\n            winnings =\n              foundBonus.Amount + (betSummary?.betSummary.totalEarnings || 0);\n          }\n\n          return {\n            _id: `${mon}-${weekNumber}`,\n            mon: monNumber + '-' + mon,\n            year,\n            startDate: weekStart.toISOString(),\n            endDate: weekEnd.toISOString(),\n            bonus: foundBonus?.Amount || betSummary?.betSummary.bonus || 0,\n            totalStaked: betSummary?.betSummary.totalStaked || 0,\n            totalEarnings: betSummary?.betSummary.totalEarnings || 0,\n            winnings,\n            approxWinnings: betSummary?.betSummary.winnings || 0,\n            loading: false,\n            fetch: 0,\n            title: mon,\n            withdrawal: foundWithdrawal,\n          };\n        },\n      );\n      const groupedDataList = groupBy(dataList, 'mon');\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split('-')[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n      console.log(\n        'gaga----------------------------defaultList---------',\n        defaultList,\n      );\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'winnings');\n      });\n\n      const yearTotalWithdrawals = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'withdrawal.Amount');\n      });\n\n      console.log(\n        'gaga----------------------userDetails---------------',\n        userDetails,\n      );\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        yearTotalWithdrawals,\n        list: defaultList,\n        userDetails,\n      }));\n    });\n  }, [email]);\n\n  return (\n    <div className='user-details-wrap'>\n      <Segment inverted>\n        <div className='ttl'>\n          <span>{email}</span>\n          <div className='row-wrap between'>\n            <Popup\n              on='hover'\n              basic\n              trigger={<Icon name='info circle' />}\n              position='bottom right'\n              mouseLeaveDelay={60000}\n            >\n              <Menu vertical>\n                <Menu.Item header>\n                  <Header as='h3'>\n                    Year {moment().format('YYYY')} Details\n                  </Header>\n                </Menu.Item>\n                <Menu.Item>\n                  <Header as='h4'>Current Balance</Header>\n                  <p>\n                    <Label color='green'>\n                      {Money(\n                        state.userDetails?.[0].data?.userSession?.cash || 0,\n                      )}\n                    </Label>\n                  </p>\n                </Menu.Item>\n                <Menu.Item>\n                  <Header as='h4'>Available Cashout</Header>\n                  <p>\n                    <Label color='orange'>\n                      {Money(\n                        state.userDetails?.[0].data?.userSession?.cashout || 0,\n                      )}\n                    </Label>\n                  </p>\n                </Menu.Item>\n                <Menu.Item>\n                  <Header as='h4'>Total Earnings this year</Header>\n                  <p>\n                    <Label color='purple'>\n                      {Money(state.yearTotalWinnings)}\n                    </Label>\n                  </p>\n                </Menu.Item>\n                <Menu.Item>\n                  <Header as='h4'>Total Cashout this year</Header>\n                  <p>\n                    <Label color='red'>\n                      {' '}\n                      {Money(Math.abs(state.yearTotalWithdrawals || 0))}\n                    </Label>\n                  </p>\n                </Menu.Item>\n              </Menu>\n            </Popup>\n          </div>\n        </div>\n        <hr />\n        <div className='user-details-content-wrap'>\n          {state.list.map((mon) => {\n            const total = sumBy(mon.data, 'winnings');\n            return (\n              <div\n                key={mon.title}\n                className='mon-wrap'>\n                <div className='ttl-wrap'>\n                  <Header\n                    as='h3'\n                    inverted>\n                    {mon.title}\n                  </Header>\n                  <Header\n                    className={classNames({\n                      winnings: total > 0,\n                      losses: total < 0,\n                    })}\n                    as='h4'\n                    inverted\n                  >\n                    {Money(total)}\n                  </Header>\n                </div>\n                <hr />\n                <div className='week-wrap'>\n                  {mon.data.map((item) => {\n                    return (\n                      <div\n                        key={item._id}\n                        className='week'>\n                        {!!item.withdrawal && (\n                          <Popup\n                            on='click'\n                            position='top center'\n                            trigger={<div className='has-withdrawal' />}\n                            flowing\n                          >\n                            <Popup.Header>\n                              Withdrawal (\n                              <span\n                                className={classNames({\n                                  'yellow-light':\n                                    item.withdrawal.TransactionStatus ===\n                                    'Pending',\n                                  'green-light':\n                                    item.withdrawal.TransactionStatus ===\n                                    'Approved',\n                                  'blue-light': ['In Process', 'Sending to Processor'].includes(item.withdrawal.TransactionStatus),\n                                })}\n                              >\n                                {item.withdrawal.TransactionStatus}\n                              </span>\n                              )\n                            </Popup.Header>\n                            <Popup.Content>\n                              {`${item.withdrawal.PaymentMethodInfo} ${Money(\n                                item.withdrawal.Amount,\n                              )}`}\n                            </Popup.Content>\n                          </Popup>\n                        )}\n\n                        <div className='week-date'>\n                          <span>\n                            {moment(item.startDate).utc().format('ddd DD')} -{' '}\n                            {moment(item.endDate).utc().format('ddd DD')}\n                          </span>\n                        </div>\n                        <div className='week-content'>\n                          <div className='row-wrap'>\n                            <span>Staked</span>\n                            <span>{Money(item.totalStaked)}</span>\n                          </div>\n                          <div className='row-wrap'>\n                            <span>Earnings</span>\n                            <span>{Money(item.totalEarnings)}</span>\n                          </div>\n                          <div className='row-wrap'>\n                            <span>Bonus</span>\n                            <span>{Money(item.bonus)}</span>\n                          </div>\n\n                          {(item.winnings === 0 && item.totalStaked > 0 && (\n                            <div className='row-wrap'>\n                              <span>Winnings</span>\n\n                              <Popup\n                                content='Approximate Earnings.'\n                                position='top center'\n                                trigger={\n                                  <span\n                                    className={classNames({\n                                      approx: true,\n                                    })}\n                                  >\n                                    {Money(item.approxWinnings)}\n                                  </span>\n                                }\n                              />\n                            </div>\n                          )) || (\n                            <div className='row-wrap'>\n                              <span>Winnings</span>\n                              <span\n                                className={classNames({\n                                  winnings: item.winnings > 0,\n                                  losses: item.winnings < 0,\n                                })}\n                              >\n                                {Money(item.winnings)}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","_createClass","_classCallCheck","loading","list","yearTotalWinnings","yearTotalWithdrawals","userDetails","UserDetailsComponent","memo","_pathname$split$pop","_state$userDetails","_state$userDetails$0$","_state$userDetails$0$2","_state$userDetails2","_state$userDetails2$","_state$userDetails2$$","email","useLocation","pathname","split","pop","replace","_useState","useState","_useState2","_slicedToArray","state","setState","useEffect","prevState","_objectSpread","forkJoin","API","getBetSummary","getBonuses","getWithdrawals","getUser","subscribe","_ref","_ref2","betSummaryList","bonusList","withdrawalList","filteredBonusList","filter","item","TransactionStatus","TransactionType","PaymentMethodInfo","filteredWithdrawalList","includes","console","log","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","betSummary","find","parseInt","foundBonus","TransactionDateTime","subtract","isAfter","isBefore","foundWithdrawal","transactionDate","isSameOrAfter","isSameOrBefore","winnings","Amount","totalEarnings","_id","concat","bonus","totalStaked","approxWinnings","fetch","title","withdrawal","groupedDataList","groupBy","defaultList","Object","key","data","sumBy","_jsx","className","children","_jsxs","Segment","inverted","Popup","on","basic","trigger","Icon","name","position","mouseLeaveDelay","Menu","vertical","Item","header","Header","as","Label","color","Money","userSession","cash","cashout","Math","abs","total","classNames","losses","flowing","Content","utc","content","approx","ElementComponent","props","this","Dimmer","style","top","left","right","bottom","active","Loader"],"sourceRoot":""}