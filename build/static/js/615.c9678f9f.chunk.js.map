{"version":3,"file":"static/js/615.c9678f9f.chunk.js","mappings":"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","sources":["app/components/user-details/user-details.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport \"./user-details.component.scss\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport { EarningsModel } from \"@models/custom.models\";\nimport { API } from \"@services/api.service\";\nimport { ElementComponent } from \"@app/shared/component/element-loader.component\";\nimport { groupBy, sumBy } from \"lodash\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\";\nimport { Money } from \"@utilities/utils\";\nimport classNames from \"classnames\";\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const email = pathname.split(\"/\").pop()?.replace(\"@\", \"\");\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    API.getBetSummary({ email }).subscribe((res) => {\n      console.log(\n        \"gaga-----------------------------------getSettledBets--\",\n        res,\n      );\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map(\n        (weekNumber) => {\n          const year = moment().format(\"YYYY\");\n          const date = moment(year).add(weekNumber, \"weeks\");\n          const mon = moment(date).format(\"MMM\");\n          const monNumber = moment(date).format(\"M\");\n          const startDate = moment(date)\n            .startOf(\"week\")\n            .add(1, \"day\")\n            .toISOString();\n          const endDate = moment(date).endOf(\"week\").toISOString();\n\n          const weekStart = new Date(startDate);\n          const weekEnd = new Date(endDate);\n          weekStart.setUTCHours(0, 0, 0, 0);\n          weekEnd.setUTCHours(23, 59, 59, 999);\n\n          const betSummary = res?.find((item) => {\n            return (\n              item.startDate === weekStart.toISOString() &&\n              item.endDate === weekEnd.toISOString() &&\n              item.year === parseInt(year, 10)\n            );\n          });\n\n          console.log(\n            \"gaga--------------------betSummary-----------------\",\n            betSummary,\n          );\n          return {\n            _id: `${mon}-${weekNumber}`,\n            mon: monNumber + \"-\" + mon,\n            year,\n            startDate: weekStart.toISOString(),\n            endDate: weekEnd.toISOString(),\n            bonus: betSummary?.betSummary.bonus || 0,\n            totalStaked: betSummary?.betSummary.totalStaked || 0,\n            totalEarnings: betSummary?.betSummary.totalEarnings || 0,\n            winnings: betSummary?.betSummary.winnings || 0,\n            loading: false,\n            fetch: 0,\n            title: mon,\n          };\n        },\n      );\n      const groupedDataList = groupBy(dataList, \"mon\");\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split(\"-\")[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n      console.log(\"gaga-------------------------------------\", defaultList);\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, \"winnings\");\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        list: defaultList,\n      }));\n    });\n  }, [email]);\n\n  return (\n    <div className=\"user-details-wrap\">\n      <Segment inverted>\n        <div className=\"ttl\">\n          <span>{email}</span>\n          <span>\n            {moment().format(\"YYYY\")} earnings\n            <span\n              className={classNames({\n                winnings: state.yearTotalWinnings > 0,\n                losses: state.yearTotalWinnings < 0,\n              })}\n            >\n              {\" \" + Money(state.yearTotalWinnings)}\n            </span>\n          </span>\n        </div>\n        <hr />\n        <div className=\"user-details-content-wrap\">\n          {state.list.map((mon) => {\n            const total = sumBy(mon.data, \"winnings\");\n            return (\n              <div key={mon.title} className=\"mon-wrap\">\n                <div className=\"ttl-wrap\">\n                  <Header as=\"h3\" inverted>\n                    {mon.title}\n                  </Header>\n                  <Header\n                    className={classNames({\n                      winnings: total > 0,\n                      losses: total < 0,\n                    })}\n                    as=\"h4\"\n                    inverted\n                  >\n                    {Money(total)}\n                  </Header>\n                </div>\n                <hr />\n                <div className=\"week-wrap\">\n                  {mon.data.map((item) => {\n                    return (\n                      <div key={item._id} className=\"week\">\n                        <div className=\"week-date\">\n                          <span>\n                            {moment(item.startDate).utc().format(\"ddd DD\")} -{\" \"}\n                            {moment(item.endDate).utc().format(\"ddd DD\")}\n                          </span>\n                        </div>\n                        <div className=\"week-content\">\n                          <div className=\"row-wrap\">\n                            <span>Staked</span>\n                            <span>{Money(item.totalStaked)}</span>\n                          </div>\n                          <div className=\"row-wrap\">\n                            <span>Earnings</span>\n                            <span>{Money(item.totalEarnings)}</span>\n                          </div>\n                          <div className=\"row-wrap\">\n                            <span>Bonus</span>\n                            <span>{Money(item.bonus)}</span>\n                          </div>\n                          <div className=\"row-wrap\">\n                            <span>Winnings</span>\n                            <span\n                              className={classNames({\n                                winnings: item.winnings > 0,\n                                losses: item.winnings < 0,\n                              })}\n                            >\n                              {Money(item.winnings)}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","_createClass","_classCallCheck","loading","list","yearTotalWinnings","UserDetailsComponent","memo","_pathname$split$pop","email","useLocation","pathname","split","pop","replace","_useState","useState","_useState2","_slicedToArray","state","setState","useEffect","prevState","_objectSpread","API","getBetSummary","subscribe","res","console","log","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","betSummary","find","item","parseInt","_id","concat","bonus","totalStaked","totalEarnings","winnings","fetch","title","groupedDataList","groupBy","defaultList","Object","key","data","sumBy","_jsx","className","children","_jsxs","Segment","inverted","classNames","losses","Money","total","Header","as","utc","ElementComponent","props","content","this","Dimmer","style","position","top","left","right","bottom","active","Loader"],"sourceRoot":""}