{"version":3,"file":"static/js/615.32a5159b.chunk.js","mappings":"icAeA,MAAMA,EAAMC,WAAAA,GAAA,KACVC,SAAU,EAAK,KACfC,KAAmD,GAAG,KACtDC,kBAA4B,EAAE,KAC9BC,qBAA+B,EAAE,KACjCC,iBAAW,OACXC,cAAe,CAAM,EAGhB,MAAMC,GAAuBC,EAAAA,EAAAA,OAAK,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7C,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACfC,EAAkC,QAA5BZ,EAAGU,EAASG,MAAM,KAAKC,aAAK,IAAAd,OAAA,EAAzBA,EAA2Be,QAAQ,IAAK,KAChDC,EAAOC,IAAYC,EAAAA,EAAAA,UAAgB,IAAI5B,IAE9C6B,EAAAA,EAAAA,YAAU,KACRF,GAAUG,IAAS,IAAWA,EAAW5B,SAAS,MAElD,MAAM6B,EAAiB,OAANT,QAAM,IAANA,OAAM,EAANA,EAAQC,MAAM,MAC/BS,EAAAA,EAAAA,GAAS,CACPC,EAAAA,EAAIC,cAAc,CAAEC,MAAO,CAAEC,IAAKL,KAClCE,EAAAA,EAAII,WAAW,CAAEF,MAAO,CAAEC,IAAKL,KAC/BE,EAAAA,EAAIK,eAAe,CAAEH,MAAO,CAAEC,IAAKL,KACnCE,EAAAA,EAAIM,QAAQ,CAAEJ,MAAO,CAAEC,IAAKL,OAC3BS,WAAUC,IAA+D,IAA7DC,EAAgBC,EAAWC,EAAgBtC,GAAYmC,EACpE,MAAMI,EAA6B,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWG,QAAQC,GAEd,aAA3BA,EAAKC,mBACoB,UAAzBD,EAAKE,iBACL,CAAC,kBAAmB,SAASC,SAASH,EAAKI,oBAC3CJ,EAAKK,QAAU,KAIbC,EAAuC,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAQC,GAC9C,CAAC,WAAY,UAAW,uBAAwB,cAAcG,SAASH,EAAKC,qBAG/EM,EAAWC,MAAMC,KAAKD,MAAME,MAASC,kBAAkBC,QAAQC,KAAKC,IAAgB,IAADC,EACvF,MAAMC,EAAON,MAASO,OAAO,QACvBC,EAAOR,IAAOM,GAAMG,IAAIL,EAAY,SACpCM,EAAMV,IAAOQ,GAAMD,OAAO,OAC1BI,EAAYX,IAAOQ,GAAMD,OAAO,KAChCK,EAAYZ,IAAOQ,GAAMK,QAAQ,QAAQJ,IAAI,EAAG,OAAOK,cACvDC,EAAUf,IAAOQ,GAAMQ,MAAM,QAAQF,cAErCG,EAAY,IAAIC,KAAKN,GACrBO,EAAU,IAAID,KAAKH,GACzBE,EAAUG,YAAY,EAAG,EAAG,EAAG,GAC/BD,EAAQC,YAAY,GAAI,GAAI,GAAI,KAEhC,MAAMC,EAA+B,OAAdpC,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,QAAQC,GAE3CA,EAAKsB,YAAcK,EAAUH,eAC7BxB,EAAKyB,UAAYI,EAAQL,eACzBxB,EAAKgB,OAASgB,SAAShB,EAAM,MAQ3BiB,EAAwB,OAARjD,QAAQ,IAARA,OAAQ,EAARA,EAClB6B,KAAKzB,GACmB,OAAjBU,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoC,UAAUC,MAAMnC,IACxC,MAAMoC,EAAsB1B,IAAOV,EAAKoC,qBAAqBC,SAAS,EAAG,QACzE,OACED,EAAoBE,QAAQX,IAAcS,EAAoBG,SAASV,IAAY7B,EAAKZ,QAAUA,CAAK,MAI5GW,OAAOyC,SAKJC,EAAwC,OAAtBnC,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwB6B,MAAMnC,IACpD,MAAM0C,EAAkB,IAAId,KAAK5B,EAAKoC,oBAAoB5D,MAAM,KAAK,IACrEkE,EAAgBZ,YAAY,EAAG,EAAG,EAAG,GACrC,MAAMM,EAAsB1B,IAAOgC,EAAgBlB,eAEnD,OAAOY,EAAoBO,cAAchB,IAAcS,EAAoBQ,eAAef,EAAQ,IAGpG,IAAIgB,EAAW,EAEf,MAAMC,GAAQC,EAAAA,EAAAA,OAAMhB,GAAiBiB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWF,QAAS,IAC9EG,GAAcF,EAAAA,EAAAA,OAAMhB,GAAiBiB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWC,cAAe,IAC1FC,GAAgBH,EAAAA,EAAAA,OAAMhB,GAAiBiB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWE,gBAAiB,IACpG,IAAIC,GAAiBJ,EAAAA,EAAAA,OAAMhB,GAAiBiB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWH,WAAY,IAE1FO,GAAcL,EAAAA,EAAAA,OAAMd,GAAgBoB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYhD,SAAU,IAW7E,OAViB,OAAb4B,QAAa,IAAbA,OAAa,EAAbA,EAAeqB,WAAmB,OAARtE,QAAQ,IAARA,OAAQ,EAARA,EAAUsE,QACtCF,EAAcN,EAEdK,EAAiB,EAGF,OAAblB,QAAa,IAAbA,GAAAA,EAAeqB,QAAwB,OAAdvB,QAAc,IAAdA,GAAAA,EAAgBuB,SAC3CT,EAAWO,GAAcL,EAAAA,EAAAA,OAAMhB,GAAiBiB,IAAyB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYA,WAAWE,gBAAiB,KAGlG,CACLK,IAAI,GAADC,OAAKpC,EAAG,KAAAoC,OAAI1C,GACfM,IAAKC,EAAY,IAAMD,EACvBJ,OACAM,UAAWK,EAAUH,cACrBC,QAASI,EAAQL,cACjBsB,MAAOM,GAAeN,GAAS,EAC/BW,cAA4B,OAAbxB,QAAa,IAAbA,GAAkB,QAALlB,EAAbkB,EAAgB,UAAE,IAAAlB,OAAL,EAAbA,EAAoBqB,oBACnCa,cACAC,gBACAL,WACAM,iBACAhG,SAAS,EACTuG,MAAO,EACPC,MAAOvC,EACPwC,WAAYnB,EACb,IAEGoB,GAAkBC,EAAAA,EAAAA,SAAQvD,EAAU,OACpCwD,EAAcC,OAAOpD,KAAKiD,GAAiBhD,KAAKoD,IAC7C,CACLN,MAAOM,EAAIzF,MAAM,KAAK,GACtB0F,KAAML,EAAgBI,OAIpB5G,GAAoB0F,EAAAA,EAAAA,OAAMgB,GAAc/D,IACrC+C,EAAAA,EAAAA,OAAM/C,EAAKkE,KAAM,cAGpB5G,GAAuByF,EAAAA,EAAAA,OAAMgB,GAAc/D,IACxC+C,EAAAA,EAAAA,OAAM/C,EAAKkE,KAAM,uBAG1BtF,GAAUG,IAAS,IACdA,EACH5B,SAAS,EACTE,oBACAC,uBACAF,KAAM2G,EACNxG,iBACC,GACH,GACD,CAACgB,IAEJ,MAAM4F,GAAsBC,EAAAA,EAAAA,cAAY,KACtCxF,GAAUG,IAAS,IACdA,EACHvB,cAAemB,EAAMnB,gBACpB,GACF,CAACmB,EAAMnB,eAEJ6G,IAAsB,OAAN9F,QAAM,IAANA,OAAM,EAANA,EAAQC,MAAM,OAAQ,IAAI8E,OAAS,EAEzD,OACEgB,EAAAA,EAAAA,KAAA,OACEC,UAAWC,IAAW,CACpB,qBAAqB,EACrB,cAAeH,IACdI,UAEHC,EAAAA,EAAAA,MAACC,EAAAA,EAAe,CAAAF,SAAA,EACdH,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACC,UAAU,UAAUC,OAAQX,EAAqBY,QAASpG,EAAMnB,aAAcwH,MAAO,OAAOP,UACnGH,EAAAA,EAAAA,KAACW,EAAAA,EAAqB,CAACC,OAAQ,CAAE9F,MAAOb,GAAoBhB,YAA8B,QAAnBK,EAAEe,EAAMpB,mBAAW,IAAAK,OAAA,EAAjBA,EAAoB,QAG/F0G,EAAAA,EAAAA,KAACa,EAAAA,EAAa,CAAAV,UACZC,EAAAA,EAAAA,MAACU,EAAAA,EAAO,CAACC,UAAQ,EAAAZ,SAAA,EACfC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKE,SAAA,CAChBJ,GAMAC,EAAAA,EAAAA,KAAA,QAAAG,SAAM,sBALNC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,YAAYE,SAAA,EAC1BH,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACC,QAASpB,EAAqBI,UAAW,UAAWiB,KAAM,OAAQC,KAAM,WAC9EnB,EAAAA,EAAAA,KAAA,QAAAG,SAAOlG,QAKT8F,IACAC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBE,UAC/BH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJC,GAAG,QACHC,OAAK,EACLC,SAASvB,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACE,KAAK,cAAcC,KAAM,QAASlB,UAAW,YAC5DuB,SAAS,eACTC,gBAAiB,IAAMtB,UAEvBC,EAAAA,EAAAA,MAACsB,EAAAA,EAAI,CAACC,UAAQ,EAAAxB,SAAA,EACZH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAKE,KAAI,CAACC,QAAM,EAAA1B,UACfC,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CAACC,GAAG,KAAI5B,SAAA,CAAC,QAAM/D,MAASO,OAAO,QAAQ,iBAEhDyD,EAAAA,EAAAA,MAACsB,EAAAA,EAAKE,KAAI,CAAAzB,SAAA,EACRH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,GAAG,KAAI5B,SAAC,qBAChBH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,MAAM,QAAO9B,UAAE+B,EAAAA,EAAAA,KAAuB,QAAjB3I,EAAAc,EAAMpB,mBAAW,IAAAM,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,GAAM,QAANC,EAAtBD,EAAwBoG,YAAI,IAAAnG,GAAa,QAAbC,EAA5BD,EAA8B0I,mBAAW,IAAAzI,OAAxB,EAAjBA,EAA2C0I,OAAQ,WAGnFhC,EAAAA,EAAAA,MAACsB,EAAAA,EAAKE,KAAI,CAAAzB,SAAA,EACRH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,GAAG,KAAI5B,SAAC,uBAChBH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,MAAM,SAAQ9B,UAAE+B,EAAAA,EAAAA,KAAuB,QAAjBvI,EAAAU,EAAMpB,mBAAW,IAAAU,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,GAAM,QAANC,EAAtBD,EAAwBgG,YAAI,IAAA/F,GAAa,QAAbC,EAA5BD,EAA8BsI,mBAAW,IAAArI,OAAxB,EAAjBA,EAA2CuI,UAAW,WAGvFjC,EAAAA,EAAAA,MAACsB,EAAAA,EAAKE,KAAI,CAAAzB,SAAA,EACRH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,GAAG,KAAI5B,SAAC,8BAChBH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,MAAM,SAAQ9B,UAAE+B,EAAAA,EAAAA,IAAM7H,EAAMtB,2BAGvCqH,EAAAA,EAAAA,MAACsB,EAAAA,EAAKE,KAAI,CAAAzB,SAAA,EACRH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,GAAG,KAAI5B,SAAC,6BAChBH,EAAAA,EAAAA,KAAA,KAAAG,UACEC,EAAAA,EAAAA,MAAC4B,EAAAA,EAAK,CAACC,MAAM,MAAK9B,SAAA,CAAC,KAAE+B,EAAAA,EAAAA,IAAMI,KAAKC,IAAIlI,EAAMrB,sBAAwB,uBAQhFgH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BE,SACvC9F,EAAMvB,KAAKyD,KAAKO,IACf,MAAM0F,GAAQ/D,EAAAA,EAAAA,OAAM3B,EAAI8C,KAAM,YAC9B,OACEQ,EAAAA,EAAAA,MAAA,OAAqBH,UAAU,WAAUE,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,GAAG,KAAKhB,UAAQ,EAAAZ,SACrBrD,EAAIuC,SAEPW,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CACL7B,UAAWC,IAAW,CACpB3B,SAAUiE,EAAQ,EAClBC,OAAQD,EAAQ,IAElBT,GAAG,KACHhB,UAAQ,EAAAZ,UAEP+B,EAAAA,EAAAA,IAAMM,SAGXxC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,SACvBrD,EAAI8C,KAAKrD,KAAKb,IAEX0E,EAAAA,EAAAA,MAAA,OAAoBH,UAAU,OAAME,SAAA,GAC/BzE,EAAK4D,aAAeS,IACrBC,EAAAA,EAAAA,KAAA0C,EAAAA,SAAA,CAAAvC,SACG,CACC,CACEwC,QAA+C,YAAtCjH,EAAK4D,WAAW3D,kBACzBiH,SAAgD,aAAtClH,EAAK4D,WAAW3D,kBAC1BkH,WAAY,CAAC,aAAc,wBAAwBhH,SACjDH,EAAK4D,WAAW3D,qBAGpBY,KAAI,CAACuG,EAAQC,KAAK,IAAAC,EAAAC,EAAAC,EAAA,OAClB9C,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAEJC,GAAG,QACHG,SAAS,aACTD,SACEvB,EAAAA,EAAAA,KAAA,OACEC,UAAWC,IAAW,CACpB,kBAAkB,EAClBiD,OAAQL,EAAOH,QACfS,MAAON,EAAOF,SACdS,KAAMP,EAAOD,eAInBS,SAAO,EAAAnD,SAAA,EAEPC,EAAAA,EAAAA,MAACgB,EAAAA,EAAMU,OAAM,CAAA3B,SAAA,CAAC,gBAEZH,EAAAA,EAAAA,KAAA,QACEC,UAAWC,IAAW,CACpB,eAAgB4C,EAAOH,QACvB,cAAeG,EAAOF,SACtB,aAAcE,EAAOD,aACpB1C,SAEa,QAFb6C,EAEFtH,EAAK4D,kBAAU,IAAA0D,OAAA,EAAfA,EAAiBrH,oBACb,QAGTqE,EAAAA,EAAAA,KAACoB,EAAAA,EAAMmC,QAAO,CAAApD,SAAA,GAAAjB,OACO,QADP+D,EACRvH,EAAK4D,kBAAU,IAAA2D,OAAA,EAAfA,EAAiBnH,kBAAiB,KAAAoD,QAAIgD,EAAAA,EAAAA,KAAqB,QAAfgB,EAAAxH,EAAK4D,kBAAU,IAAA4D,OAAA,EAAfA,EAAiBnH,SAAU,QA7BxEgH,EA+BC,OAKd/C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,UACxBC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACG/D,IAAOV,EAAKsB,WAAWwG,MAAM7G,OAAO,UAAU,KAAG,IACjDP,IAAOV,EAAKyB,SAASqG,MAAM7G,OAAO,gBAGvCyD,EAAAA,EAAAA,MAAA,OAAKH,UAAU,eAAcE,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,YACNH,EAAAA,EAAAA,KAAA,QAAAG,UAAO+B,EAAAA,EAAAA,IAAMxG,EAAKiD,mBAEpByB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cACNH,EAAAA,EAAAA,KAAA,QAAAG,UAAO+B,EAAAA,EAAAA,IAAMxG,EAAKkD,qBAEpBwB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,WACNH,EAAAA,EAAAA,KAAA,QAAAG,UAAO+B,EAAAA,EAAAA,IAAMxG,EAAK8C,YAGlB9C,EAAKmD,eAAiB,IAAKmB,EAAAA,EAAAA,KAACyD,EAAAA,EAAc,CAACC,SAAUhI,MACrDsE,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACD,SAAUhI,SAtEhBA,EAAKuD,WApBbnC,EAAIuC,MAiGR,OAIZW,EAAAA,EAAAA,KAAC4D,EAAAA,EAAgB,CAAC/K,QAASwB,EAAMxB,mBAInC,I,gJCnVH,MAAM4K,EAAiBrI,IAAgD,IAA/C,SAAEsI,GAAuCtI,EACtE,OACEgF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cAENH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJyC,QAAQ,wBACRrC,SAAS,aACTD,SACEvB,EAAAA,EAAAA,KAAA,QACEC,UAAWC,IAAW,CACpB4D,QAAQ,IACP3D,UAEF+B,EAAAA,EAAAA,IAAMwB,EAAS7E,sBAIlB,EAIG8E,EAAWI,IAAgD,IAA/C,SAAEL,GAAuCK,EAChE,OACE3D,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cAENH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJ4C,UAAWN,EAASvE,cACpB0E,QAASzH,IAAOsH,EAASvE,eAAexC,OAAO,eAC/C6E,SAAS,aACTD,SACEvB,EAAAA,EAAAA,KAAA,QACEC,UAAWC,IAAW,CACpB3B,SAAUmF,EAASnF,SAAW,EAC9BkE,OAAQiB,EAASnF,SAAW,IAC3B4B,UAEF+B,EAAAA,EAAAA,IAAMwB,EAASnF,gBAIlB,C,mPC1BV,MAAM5F,EAgBJC,WAAAA,CAAYqL,GAAe,IAADC,EAAAC,EAAA,KAf1BvD,OAAiB,CACfwD,QAAQ,EACRtJ,MAAO,GACPuJ,SAAU,IACV,KACFxL,SAAU,EAAM,KAEhBI,YAA+B,CAC7B2G,KAAM,CACJuC,YAAa,CACXmC,gBAAiB,MAMrBC,KAAKtL,YAAY2G,KAAKuC,YAAamC,iBAAmC,QAAjBJ,EAAAD,EAAMhL,mBAAW,IAAAiL,GAAkB,QAAlBC,EAAjBD,EAAmBtE,KAAKuC,mBAAW,IAAAgC,OAAlB,EAAjBA,EAAqCG,kBAAmB,EAC/G,EAGK,MAAM3D,GAAwBvH,EAAAA,EAAAA,OAAM6K,IAAkB,IAADO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1D,MAAOhL,EAAOC,IAAYC,EAAAA,EAAAA,UAAgB,IAAI5B,EAAMsL,IAEpDqB,QAAQC,IAAI,gEAAiElL,IAC7EG,EAAAA,EAAAA,YAAU,KACRF,GAAUG,IAAe,IAAD+K,EAAAC,EAItB,OAHAhL,EAAUxB,YAAY2G,KAAKuC,YAAamC,iBACrB,QAAjBkB,EAAAvB,EAAMhL,mBAAW,IAAAuM,GAAkB,QAAlBC,EAAjBD,EAAmB5F,KAAKuC,mBAAW,IAAAsD,OAAlB,EAAjBA,EAAqCnB,kBAAmB,GAC1D7J,EAAUmG,OAAO9F,MAAQmJ,EAAMrD,OAAO9F,MAC/B,IACFL,EACJ,GACD,GACD,CAACwJ,IAEJ,MAAMyB,GAAoB5F,EAAAA,EAAAA,cAAY,KACpCwF,QAAQC,IAAI,8DAA+DlL,EAAMuG,QACjFtG,GAAUG,IAAS,IAAWA,EAAW5B,SAAS,MAClD+B,EAAAA,EAAI+K,SACDC,MAAMvL,EAAMuG,OAAO9F,MAAOT,EAAMuG,OAAOyD,UACvCwB,MACCC,EAAAA,EAAAA,IAAS,KACPR,QAAQC,IACN,oDACAQ,KAAKC,UACH,IACK3L,EAAMpB,YACTgG,IAAK5E,EAAMuG,OAAO9F,OAEpB,KACA,IAGGF,EAAAA,EAAIqL,eAAe,IACrB5L,EAAMpB,YACTgG,IAAK5E,EAAMuG,OAAO9F,YAIvBK,WAAU,KACTb,GAAUG,IAAS,IAAWA,EAAW5B,SAAS,KAAS,GAC3D,GACH,CAACwB,EAAMuG,SAEJsF,GAAgBpG,EAAAA,EAAAA,cAAaqG,IACjCb,QAAQC,IAAI,6CACZjL,GAAUG,IACR,MAAM2L,EAAW,CAAC,EACZC,EAAOF,EAAEG,OAAOC,aAAa,eACnCC,EAAAA,EAAAA,KAAIJ,EAAUC,EAAMF,EAAEG,OAAOG,OAE7B,MAAMC,GAAWC,EAAAA,EAAAA,OAAMlM,EAAW2L,GAElC,OADAd,QAAQC,IAAI,4CAA6CmB,GAClD,IACFjM,KACAiM,EACJ,GACD,GACD,IAEGE,GAA8B9G,EAAAA,EAAAA,cAClC,CAACqG,EAAsCvG,KACrCuG,EAAEU,iBACF,MAAMJ,EAAQ7G,EAAK,cAEnBF,OAAOpD,KAAKmK,GAAOK,SAASnH,IAC1B,MAAMoH,GAAYC,EAAAA,EAAAA,KAAI3M,EAAMpB,YAAa0G,GACnCsH,EAAYR,EAAM9G,GACZ,cAARA,GAAyBoH,UACpB1M,EAAMpB,YAAYiO,UACzBxH,OAAOyH,OAAO9M,EAAMpB,aAAamO,EAAAA,EAAAA,MAAK/M,EAAMpB,YAAa0G,KAChDoH,IAAcE,GACvBT,EAAAA,EAAAA,KAAInM,EAAMpB,YAAa0G,EAAK8G,EAAM9G,IAElCD,OAAOyH,OAAO9M,EAAMpB,aAAamO,EAAAA,EAAAA,MAAK/M,EAAMpB,YAAa0G,GAC3D,IAGF2F,QAAQC,IACN,6DACAnJ,IAAO/B,EAAMpB,YAAYiO,WAAWG,UACpChN,EAAMpB,YAAYiO,WAEpB5M,GAAUG,IAAS,IACdA,EACHxB,YAAaoB,EAAMpB,eAClB,GAEL,CAACoB,EAAMpB,cAGHqO,GAAoBxH,EAAAA,EAAAA,cAAaqG,IACrCA,EAAEU,iBACFV,EAAEG,OAAOiB,MAAM,GACd,IAEH,OACEnH,EAAAA,EAAAA,MAAA,OACEH,UAAWC,IAAW,CACpB,iBAAiB,EACjBsH,KAAMnN,EAAMuG,OAAOwD,SAClBjE,SAAA,EAEHC,EAAAA,EAAAA,MAACU,EAAAA,EAAO,CAACC,UAAQ,EAAAZ,SAAA,EACfH,EAAAA,EAAAA,KAAA,QAAMC,UAAW,MAAME,SAAC,cACxBH,EAAAA,EAAAA,KAAA,UAEAI,EAAAA,EAAAA,MAAA,OAAKH,UAAW,UAAUE,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,iBACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAO9F,EAAMuG,OAAO9F,YAEtBsF,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,iBACNH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACL1G,UAAQ,EACRkB,MAAM,QACNd,KAAM,QACNuG,UAAQ,EACRC,SAAUtN,EAAMpB,YAAYiO,UAC5B,aAAY,CAAEA,UAAW9K,MAAS2B,SAAS,EAAG,QAAQ6J,UACtD3G,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,YAIHC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,aACNC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,WAAWE,SAAA,EACzBH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,SACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,oBAAqB,KACnCC,OAAkD,OAApB,QAAtBnD,EAAAnK,EAAMpB,YAAY2G,YAAI,IAAA4E,GAAU,QAAVC,EAAtBD,EAAwBuD,gBAAQ,IAAAtD,OAAV,EAAtBA,EAAkCuD,KAC1C/G,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,OAGDH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,SACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,oBAAqB,MACnCC,OAAkD,QAApB,QAAtBjD,EAAArK,EAAMpB,YAAY2G,YAAI,IAAA8E,GAAU,QAAVC,EAAtBD,EAAwBqD,gBAAQ,IAAApD,OAAV,EAAtBA,EAAkCqD,KAC1C/G,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,QAGDH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,QACNd,KAAM,QACNuG,UAAQ,EACRC,OAAkD,QAApB,QAAtB/C,EAAAvK,EAAMpB,YAAY2G,YAAI,IAAAgF,GAAU,QAAVC,EAAtBD,EAAwBmD,gBAAQ,IAAAlD,OAAV,EAAtBA,EAAkCmD,KAC1C,aAAY,CAAE,oBAAqB,MACnC/G,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,cAKLC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cACNC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,WAAWE,SAAA,EACzBH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,MACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,wBAAwB,GACtCC,QAAqD,KAAvB,QAAtB7C,EAAAzK,EAAMpB,YAAY2G,YAAI,IAAAkF,GAAY,QAAZC,EAAtBD,EAAwBmD,kBAAU,IAAAlD,OAAZ,EAAtBA,EAAoCmD,MAC5CjH,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,WAGDH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,QACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,wBAAwB,GACtCC,QAAqD,KAAvB,QAAtB3C,EAAA3K,EAAMpB,YAAY2G,YAAI,IAAAoF,GAAY,QAAZC,EAAtBD,EAAwBiD,kBAAU,IAAAhD,OAAZ,EAAtBA,EAAoCiD,MAC5CjH,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,gBAKLC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,oBACNC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,WAAWE,SAAA,EACzBH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,MACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,mCAAmC,GACjDC,QAAgE,KAAlC,QAAtBzC,EAAA7K,EAAMpB,YAAY2G,YAAI,IAAAsF,GAAU,QAAVC,EAAtBD,EAAwB6C,gBAAQ,IAAA5C,OAAV,EAAtBA,EAAkCgD,mBAC1ClH,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,WAGDH,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CACLK,UAAW,EACX/G,UAAQ,EACRkB,MAAM,QACNd,KAAM,QACNuG,UAAQ,EACR,aAAY,CAAE,mCAAmC,GACjDC,QAAgE,KAAlC,QAAtBvC,EAAA/K,EAAMpB,YAAY2G,YAAI,IAAAwF,GAAU,QAAVC,EAAtBD,EAAwB2C,gBAAQ,IAAA1C,OAAV,EAAtBA,EAAkC8C,mBAC1ClH,QAAS2F,EACTiB,WAAYP,EAAkBnH,SAC/B,gBAKLC,EAAAA,EAAAA,MAAA,OAAKH,UAAW,eAAeE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,yBACNH,EAAAA,EAAAA,KAAA,OAAKC,UAAW,WAAWE,UACzBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAK,CAACC,YAAY,kBAAiBlI,UAClCH,EAAAA,EAAAA,KAAA,SACE,aAAY,+CACZyG,MAAOpM,EAAMpB,YAAY2G,KAAKuC,YAAamC,gBAC3CgE,QAASpC,eAMnBlG,EAAAA,EAAAA,KAAA,UACAI,EAAAA,EAAAA,MAACmI,EAAAA,EAAI,CAACC,SAAU9C,EAAmBzF,UAAW,SAASE,SAAA,EACrDC,EAAAA,EAAAA,MAACgI,EAAAA,EAAK,CAACK,aAAa,OAAOJ,YAAY,WAAUlI,SAAA,EAC/CH,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACE,KAAK,UAEXlB,EAAAA,EAAAA,KAAA,SACEqI,YAAa,WACb,aAAY,kBACZ5B,MAAOpM,EAAMuG,OAAOyD,SACpBiE,QAASpC,QAGblG,EAAAA,EAAAA,KAACyH,EAAAA,EAAM,CAACiB,KAAM,SAASvI,SAAC,kBAG5BH,EAAAA,EAAAA,KAAC4D,EAAAA,EAAgB,CAAC/K,QAASwB,EAAMxB,YAC7B,I,kGC1SV,MAAMF,EAIJC,WAAAA,CAAYqL,GAAe,KAH3BpL,SAAU,EAAM,KAChBgL,QAAW,GAGTU,KAAK1L,QAAUoL,EAAMpL,QACrB0L,KAAKV,QAAUI,EAAMJ,OACvB,EAGK,MAAMD,EAAoBK,IAC/B,MAAO5J,EAAOC,IAAYC,EAAAA,EAAAA,UAAgB,IAAI5B,EAAMsL,IAMpD,OAJAzJ,EAAAA,EAAAA,YAAU,KACRF,GAAUG,IAAS,IAAWA,EAAW5B,QAASoL,EAAMpL,WAAW,GAClE,CAACoL,EAAMpL,WAGRmH,EAAAA,EAAAA,KAAC2I,EAAAA,EAAM,CACLC,MAAO,CACLpH,SAAU,WACVqH,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,MAEL3O,EAAMxB,QAAU,CAAE8O,QAAQ,GAAS,CAAC,EAACxH,UAE1CH,EAAAA,EAAAA,KAACiJ,EAAAA,EAAM,KACA,C","sources":["app/components/user-details/user-details.component.tsx","app/components/user-details/user-details.ui.component.tsx","app/components/user-details/user-settings.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\nimport './user-details.component.scss';\nimport { Header, Icon, Label, Menu, Popup, Segment, Sidebar, SidebarPushable, SidebarPusher } from 'semantic-ui-react';\nimport { EarningsModel, UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport { groupBy, sumBy } from 'lodash';\nimport moment from 'moment';\nimport { useLocation } from 'react-router-dom';\nimport { Money } from '@utilities/utils';\nimport classNames from 'classnames';\nimport { forkJoin } from 'rxjs';\nimport { UserSettingsComponent } from '@components/user-details/user-settings.component';\nimport { ApproxWinnings, Winnings } from '@components/user-details/user-details.ui.component';\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n  yearTotalWithdrawals: number = 0;\n  userDetails?: UserDetailModel[] | null;\n  settingsOpen = false;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const emails = pathname.split('/').pop()?.replace('@', '');\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    const emailArr = emails?.split(',');\n    forkJoin([\n      API.getBetSummary({ email: { $in: emailArr } }),\n      API.getBonuses({ email: { $in: emailArr } }),\n      API.getWithdrawals({ email: { $in: emailArr } }),\n      API.getUser({ email: { $in: emailArr } }),\n    ]).subscribe(([betSummaryList, bonusList, withdrawalList, userDetails]) => {\n      const filteredBonusList = bonusList?.filter((item) => {\n        return (\n          item.TransactionStatus === 'Approved' &&\n          item.TransactionType === 'Bonus' &&\n          ['IMMEDIATE BONUS', 'Bonus'].includes(item.PaymentMethodInfo) &&\n          item.Amount >= 10\n        );\n      });\n\n      const filteredWithdrawalList = withdrawalList?.filter((item) => {\n        return ['Approved', 'Pending', 'Sending to Processor', 'In Process'].includes(item.TransactionStatus);\n      });\n\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map((weekNumber) => {\n        const year = moment().format('YYYY');\n        const date = moment(year).add(weekNumber, 'weeks');\n        const mon = moment(date).format('MMM');\n        const monNumber = moment(date).format('M');\n        const startDate = moment(date).startOf('week').add(1, 'day').toISOString();\n        const endDate = moment(date).endOf('week').toISOString();\n\n        const weekStart = new Date(startDate);\n        const weekEnd = new Date(endDate);\n        weekStart.setUTCHours(0, 0, 0, 0);\n        weekEnd.setUTCHours(23, 59, 59, 999);\n\n        const filteredBetSum = betSummaryList?.filter((item) => {\n          return (\n            item.startDate === weekStart.toISOString() &&\n            item.endDate === weekEnd.toISOString() &&\n            item.year === parseInt(year, 10)\n          );\n        });\n\n        /*\n         * get bonus\n         * reverse to get the first occurrence not the latest\n         * */\n        const filteredBonus = emailArr\n          ?.map((email) => {\n            return filteredBonusList?.reverse().find((item) => {\n              const TransactionDateTime = moment(item.TransactionDateTime).subtract(7, 'days');\n              return (\n                TransactionDateTime.isAfter(weekStart) && TransactionDateTime.isBefore(weekEnd) && item.email === email\n              );\n            });\n          })\n          .filter(Boolean);\n\n        /*\n         * get withdrawal\n         * */\n        const foundWithdrawal = filteredWithdrawalList?.find((item) => {\n          const transactionDate = new Date(item.TransactionDateTime.split('T')[0]);\n          transactionDate.setUTCHours(0, 0, 0, 0);\n          const TransactionDateTime = moment(transactionDate.toISOString());\n\n          return TransactionDateTime.isSameOrAfter(weekStart) && TransactionDateTime.isSameOrBefore(weekEnd);\n        });\n\n        let winnings = 0;\n\n        const bonus = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.bonus || 0);\n        const totalStaked = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalStaked || 0);\n        const totalEarnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n        let approxWinnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.winnings || 0);\n\n        let playAbBonus = sumBy(filteredBonus, (foundBonus) => foundBonus?.Amount || 0);\n        if (filteredBonus?.length !== emailArr?.length) {\n          playAbBonus = bonus;\n        } else {\n          approxWinnings = 0;\n        }\n\n        if (filteredBonus?.length && filteredBetSum?.length) {\n          winnings = playAbBonus + sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n        }\n\n        return {\n          _id: `${mon}-${weekNumber}`,\n          mon: monNumber + '-' + mon,\n          year,\n          startDate: weekStart.toISOString(),\n          endDate: weekEnd.toISOString(),\n          bonus: playAbBonus || bonus || 0,\n          bonusDateTime: filteredBonus?.[0]?.TransactionDateTime,\n          totalStaked,\n          totalEarnings,\n          winnings,\n          approxWinnings,\n          loading: false,\n          fetch: 0,\n          title: mon,\n          withdrawal: foundWithdrawal,\n        };\n      });\n      const groupedDataList = groupBy(dataList, 'mon');\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split('-')[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'winnings');\n      });\n\n      const yearTotalWithdrawals = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'withdrawal.Amount');\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        yearTotalWithdrawals,\n        list: defaultList,\n        userDetails,\n      }));\n    });\n  }, [emails]);\n\n  const handleSettingsClick = useCallback(() => {\n    setState((prevState) => ({\n      ...prevState,\n      settingsOpen: !state.settingsOpen,\n    }));\n  }, [state.settingsOpen]);\n\n  const hasMultiUser = (emails?.split(',') || []).length > 1;\n\n  return (\n    <div\n      className={classNames({\n        'user-details-wrap': true,\n        'multi-users': hasMultiUser,\n      })}\n    >\n      <SidebarPushable>\n        <Sidebar animation=\"overlay\" onHide={handleSettingsClick} visible={state.settingsOpen} width={'wide'}>\n          <UserSettingsComponent config={{ email: emails as string }} userDetails={state.userDetails?.[0]} />\n        </Sidebar>\n\n        <SidebarPusher>\n          <Segment inverted>\n            <div className=\"ttl\">\n              {!hasMultiUser ? (\n                <div className={'icon-wrap'}>\n                  <Icon onClick={handleSettingsClick} className={'pointer'} name={'bars'} size={'small'} />\n                  <span>{emails}</span>\n                </div>\n              ) : (\n                <span>Multi Users View</span>\n              )}\n              {!hasMultiUser && (\n                <div className=\"row-wrap between\">\n                  <Popup\n                    on=\"hover\"\n                    basic\n                    trigger={<Icon name=\"info circle\" size={'small'} className={'pointer'} />}\n                    position=\"bottom right\"\n                    mouseLeaveDelay={60000}\n                  >\n                    <Menu vertical>\n                      <Menu.Item header>\n                        <Header as=\"h3\">Year {moment().format('YYYY')} Details</Header>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Current Balance</Header>\n                        <p>\n                          <Label color=\"green\">{Money(state.userDetails?.[0]?.data?.userSession?.cash || 0)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Available Cashout</Header>\n                        <p>\n                          <Label color=\"orange\">{Money(state.userDetails?.[0]?.data?.userSession?.cashout || 0)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Total Earnings this year</Header>\n                        <p>\n                          <Label color=\"purple\">{Money(state.yearTotalWinnings)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Total Cashout this year</Header>\n                        <p>\n                          <Label color=\"red\"> {Money(Math.abs(state.yearTotalWithdrawals || 0))}</Label>\n                        </p>\n                      </Menu.Item>\n                    </Menu>\n                  </Popup>\n                </div>\n              )}\n            </div>\n            <hr />\n            <div className=\"user-details-content-wrap\">\n              {state.list.map((mon) => {\n                const total = sumBy(mon.data, 'winnings');\n                return (\n                  <div key={mon.title} className=\"mon-wrap\">\n                    <div className=\"ttl-wrap\">\n                      <Header as=\"h3\" inverted>\n                        {mon.title}\n                      </Header>\n                      <Header\n                        className={classNames({\n                          winnings: total > 0,\n                          losses: total < 0,\n                        })}\n                        as=\"h4\"\n                        inverted\n                      >\n                        {Money(total)}\n                      </Header>\n                    </div>\n                    <hr />\n                    <div className=\"week-wrap\">\n                      {mon.data.map((item) => {\n                        return (\n                          <div key={item._id} className=\"week\">\n                            {!!item.withdrawal && !hasMultiUser && (\n                              <>\n                                {[\n                                  {\n                                    Pending: item.withdrawal.TransactionStatus === 'Pending',\n                                    Approved: item.withdrawal.TransactionStatus === 'Approved',\n                                    Processing: ['In Process', 'Sending to Processor'].includes(\n                                      item.withdrawal.TransactionStatus\n                                    ),\n                                  },\n                                ].map((status, index) => (\n                                  <Popup\n                                    key={index}\n                                    on=\"click\"\n                                    position=\"top center\"\n                                    trigger={\n                                      <div\n                                        className={classNames({\n                                          'has-withdrawal': true,\n                                          yellow: status.Pending,\n                                          green: status.Approved,\n                                          blue: status.Processing,\n                                        })}\n                                      />\n                                    }\n                                    flowing\n                                  >\n                                    <Popup.Header>\n                                      Withdrawal (\n                                      <span\n                                        className={classNames({\n                                          'yellow-light': status.Pending,\n                                          'green-light': status.Approved,\n                                          'blue-light': status.Processing,\n                                        })}\n                                      >\n                                        {item.withdrawal?.TransactionStatus}\n                                      </span>\n                                      )\n                                    </Popup.Header>\n                                    <Popup.Content>\n                                      {`${item.withdrawal?.PaymentMethodInfo} ${Money(item.withdrawal?.Amount || 0)}`}\n                                    </Popup.Content>\n                                  </Popup>\n                                ))}\n                              </>\n                            )}\n\n                            <div className=\"week-date\">\n                              <span>\n                                {moment(item.startDate).utc().format('ddd DD')} -{' '}\n                                {moment(item.endDate).utc().format('ddd DD')}\n                              </span>\n                            </div>\n                            <div className=\"week-content\">\n                              <div className=\"row-wrap\">\n                                <span>Staked</span>\n                                <span>{Money(item.totalStaked)}</span>\n                              </div>\n                              <div className=\"row-wrap\">\n                                <span>Earnings</span>\n                                <span>{Money(item.totalEarnings)}</span>\n                              </div>\n                              <div className=\"row-wrap\">\n                                <span>Bonus</span>\n                                <span>{Money(item.bonus)}</span>\n                              </div>\n\n                              {(item.approxWinnings > 0 && <ApproxWinnings earnings={item} />) || (\n                                <Winnings earnings={item} />\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <ElementComponent loading={state.loading} />\n          </Segment>\n        </SidebarPusher>\n      </SidebarPushable>\n    </div>\n  );\n});\n","import { EarningsModel } from '@models/custom.models';\nimport { Money } from '@utilities/utils';\nimport React from 'react';\nimport { Popup } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport moment from 'moment/moment';\n\nexport const ApproxWinnings = ({ earnings }: { earnings: EarningsModel }) => {\n  return (\n    <div className=\"row-wrap\">\n      <span>Winnings</span>\n\n      <Popup\n        content=\"Approximate Earnings.\"\n        position=\"top center\"\n        trigger={\n          <span\n            className={classNames({\n              approx: true,\n            })}\n          >\n            {Money(earnings.approxWinnings)}\n          </span>\n        }\n      />\n    </div>\n  );\n};\n\nexport const Winnings = ({ earnings }: { earnings: EarningsModel }) => {\n  return (\n    <div className=\"row-wrap\">\n      <span>Winnings</span>\n\n      <Popup\n        disabled={!earnings.bonusDateTime}\n        content={moment(earnings.bonusDateTime).format('ddd hh:mm A')}\n        position=\"top center\"\n        trigger={\n          <span\n            className={classNames({\n              winnings: earnings.winnings > 0,\n              losses: earnings.winnings < 0,\n            })}\n          >\n            {Money(earnings.winnings)}\n          </span>\n        }\n      />\n    </div>\n  );\n};\n","import React, { ChangeEvent, memo, useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Button, Form, Icon, Input, Segment } from 'semantic-ui-react';\nimport { API } from '@services/api.service';\nimport { UserDetailModel } from '@models/custom.models';\nimport { mergeMap } from 'rxjs';\nimport { get, merge, omit, set } from 'lodash';\nimport moment from 'moment';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\n\ninterface Config {\n  isOpen: boolean;\n  email: string;\n  password: string;\n}\n\ninterface Props {\n  config: {\n    email: string;\n  };\n  userDetails?: UserDetailModel;\n}\n\nclass State {\n  config: Config = {\n    isOpen: false,\n    email: '',\n    password: '',\n  };\n  loading = false;\n\n  userDetails: UserDetailModel = {\n    data: {\n      userSession: {\n        TWO_FACTOR_AUTH: '',\n      },\n    },\n  } as UserDetailModel;\n\n  constructor(props: Props) {\n    this.userDetails.data.userSession!.TWO_FACTOR_AUTH = props.userDetails?.data.userSession?.TWO_FACTOR_AUTH || '';\n  }\n}\n\nexport const UserSettingsComponent = memo((props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  console.log('gaga---------state---------------------statestatestate-------', state);\n  useEffect(() => {\n    setState((prevState) => {\n      prevState.userDetails.data.userSession!.TWO_FACTOR_AUTH =\n        props.userDetails?.data.userSession?.TWO_FACTOR_AUTH || '';\n      prevState.config.email = props.config.email;\n      return {\n        ...prevState,\n      };\n    });\n  }, [props]);\n\n  const handleUpdateClick = useCallback(() => {\n    console.log('gaga----------------------state.config.email---------------', state.config);\n    setState((prevState) => ({ ...prevState, loading: true }));\n    API.$RealmDB\n      .login(state.config.email, state.config.password)\n      .pipe(\n        mergeMap(() => {\n          console.log(\n            'gaga------------------------------------to update',\n            JSON.stringify(\n              {\n                ...state.userDetails,\n                _id: state.config.email,\n              },\n              null,\n              2\n            )\n          );\n          return API.upsertUserData({\n            ...state.userDetails,\n            _id: state.config.email,\n          } as UserDetailModel);\n        })\n      )\n      .subscribe(() => {\n        setState((prevState) => ({ ...prevState, loading: false }));\n      });\n  }, [state.config]);\n\n  const handleOnInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    console.log('gaga-------------------------------------');\n    setState((prevState) => {\n      const newValue = {};\n      const path = e.target.getAttribute('data-value') as string;\n      set(newValue, path, e.target.value);\n\n      const newState = merge(prevState, newValue);\n      console.log('gaga-------------------------------------', newState);\n      return {\n        ...prevState,\n        ...newState,\n      };\n    });\n  }, []);\n\n  const handleUserDetailModelUpdate = useCallback(\n    (e: React.SyntheticEvent<HTMLElement>, data: any) => {\n      e.preventDefault();\n      const value = data['data-value'];\n\n      Object.keys(value).forEach((key) => {\n        const prevValue = get(state.userDetails, key);\n        const nextValue = value[key];\n        if (key === 'updatedAt' && !!prevValue) {\n          delete state.userDetails.updatedAt;\n          Object.assign(state.userDetails, omit(state.userDetails, key));\n        } else if (prevValue !== nextValue) {\n          set(state.userDetails, key, value[key]);\n        } else {\n          Object.assign(state.userDetails, omit(state.userDetails, key));\n        }\n      });\n\n      console.log(\n        'gaga-----------------------------state.userDetails--------',\n        moment(state.userDetails.updatedAt).fromNow(),\n        state.userDetails.updatedAt\n      );\n      setState((prevState) => ({\n        ...prevState,\n        userDetails: state.userDetails,\n      }));\n    },\n    [state.userDetails]\n  );\n\n  const handleRemoveFocus = useCallback((e: ChangeEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.target.blur();\n  }, []);\n\n  return (\n    <div\n      className={classNames({\n        'settings-wrap': true,\n        open: state.config.isOpen,\n      })}\n    >\n      <Segment inverted>\n        <span className={'ttl'}>Settings</span>\n        <hr />\n\n        <div className={'content'}>\n          <div className={'content-item'}>\n            <span>For Account</span>\n            <span>{state.config.email}</span>\n          </div>\n          <div className={'content-item'}>\n            <span>Change Time</span>\n            <Button\n              inverted\n              color=\"green\"\n              size={'small'}\n              circular\n              active={!!state.userDetails.updatedAt}\n              data-value={{ updatedAt: moment().subtract(1, 'hour').toDate() }}\n              onClick={handleUserDetailModelUpdate}\n              onMouseOut={handleRemoveFocus}\n            >\n              Yes\n            </Button>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Bet</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"orange\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.bet': '5' }}\n                active={state.userDetails.data?.settings?.bet === '5'}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                5\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"yellow\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.bet': '15' }}\n                active={state.userDetails.data?.settings?.bet === '15'}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                15\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                active={state.userDetails.data?.settings?.bet === '25'}\n                data-value={{ 'data.settings.bet': '25' }}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                25\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Done</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"red\"\n                size={'small'}\n                circular\n                data-value={{ 'data.weekStatus.done': false }}\n                active={state.userDetails.data?.weekStatus?.done === false}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                false\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                data-value={{ 'data.weekStatus.done': true }}\n                active={state.userDetails.data?.weekStatus?.done === true}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                true\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Auto Login</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"red\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.electronAutoLogin': false }}\n                active={state.userDetails.data?.settings?.electronAutoLogin === false}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                false\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.electronAutoLogin': true }}\n                active={state.userDetails.data?.settings?.electronAutoLogin === true}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                true\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Two Factor Auth</span>\n            <div className={'btn-wrap'}>\n              <Input placeholder=\"Two factor auth\">\n                <input\n                  data-value={'userDetails.data.userSession.TWO_FACTOR_AUTH'}\n                  value={state.userDetails.data.userSession!.TWO_FACTOR_AUTH}\n                  onInput={handleOnInput}\n                />\n              </Input>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <Form onSubmit={handleUpdateClick} className={'footer'}>\n          <Input iconPosition=\"left\" placeholder=\"Password\">\n            <Icon name=\"lock\" />\n\n            <input\n              placeholder={'Password'}\n              data-value={'config.password'}\n              value={state.config.password}\n              onInput={handleOnInput}\n            />\n          </Input>\n          <Button type={'submit'}>Update</Button>\n        </Form>\n      </Segment>\n      <ElementComponent loading={state.loading} />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = '';\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","constructor","loading","list","yearTotalWinnings","yearTotalWithdrawals","userDetails","settingsOpen","UserDetailsComponent","memo","_pathname$split$pop","_state$userDetails","_state$userDetails2","_state$userDetails2$","_state$userDetails2$$","_state$userDetails2$$2","_state$userDetails3","_state$userDetails3$","_state$userDetails3$$","_state$userDetails3$$2","pathname","useLocation","emails","split","pop","replace","state","setState","useState","useEffect","prevState","emailArr","forkJoin","API","getBetSummary","email","$in","getBonuses","getWithdrawals","getUser","subscribe","_ref","betSummaryList","bonusList","withdrawalList","filteredBonusList","filter","item","TransactionStatus","TransactionType","includes","PaymentMethodInfo","Amount","filteredWithdrawalList","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","_filteredBonus$","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","filteredBetSum","parseInt","filteredBonus","reverse","find","TransactionDateTime","subtract","isAfter","isBefore","Boolean","foundWithdrawal","transactionDate","isSameOrAfter","isSameOrBefore","winnings","bonus","sumBy","betSummary","totalStaked","totalEarnings","approxWinnings","playAbBonus","foundBonus","length","_id","concat","bonusDateTime","fetch","title","withdrawal","groupedDataList","groupBy","defaultList","Object","key","data","handleSettingsClick","useCallback","hasMultiUser","_jsx","className","classNames","children","_jsxs","SidebarPushable","Sidebar","animation","onHide","visible","width","UserSettingsComponent","config","SidebarPusher","Segment","inverted","Icon","onClick","name","size","Popup","on","basic","trigger","position","mouseLeaveDelay","Menu","vertical","Item","header","Header","as","Label","color","Money","userSession","cash","cashout","Math","abs","total","losses","_Fragment","Pending","Approved","Processing","status","index","_item$withdrawal","_item$withdrawal2","_item$withdrawal3","yellow","green","blue","flowing","Content","utc","ApproxWinnings","earnings","Winnings","ElementComponent","content","approx","_ref2","disabled","props","_props$userDetails","_props$userDetails$da","isOpen","password","TWO_FACTOR_AUTH","this","_state$userDetails$da","_state$userDetails$da2","_state$userDetails$da3","_state$userDetails$da4","_state$userDetails$da5","_state$userDetails$da6","_state$userDetails$da7","_state$userDetails$da8","_state$userDetails$da9","_state$userDetails$da10","_state$userDetails$da11","_state$userDetails$da12","_state$userDetails$da13","_state$userDetails$da14","console","log","_props$userDetails2","_props$userDetails2$d","handleUpdateClick","$RealmDB","login","pipe","mergeMap","JSON","stringify","upsertUserData","handleOnInput","e","newValue","path","target","getAttribute","set","value","newState","merge","handleUserDetailModelUpdate","preventDefault","forEach","prevValue","get","nextValue","updatedAt","assign","omit","fromNow","handleRemoveFocus","blur","open","Button","circular","active","toDate","onMouseOut","tabIndex","settings","bet","weekStatus","done","electronAutoLogin","Input","placeholder","onInput","Form","onSubmit","iconPosition","type","Dimmer","style","top","left","right","bottom","Loader"],"sourceRoot":""}