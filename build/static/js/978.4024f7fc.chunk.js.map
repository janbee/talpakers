{"version":3,"file":"static/js/978.4024f7fc.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/map.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js"],"sourcesContent":["import React, { memo } from 'react';\nimport './users.component.scss';\nimport { Icon, Segment, Table } from 'semantic-ui-react';\nimport { useApi, useCallbackMemo } from '@utilities/utils';\nimport { UserModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport moment from 'moment';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport classNames from 'classnames';\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<UserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo((user: UserModel) => {\n    const currentLocation = JSON.stringify(window.location.href);\n    navigate(`@${user._id}`, {\n      relative: 'route',\n      replace: currentLocation.includes('@'),\n    });\n  }, []);\n\n  return (\n    <div className='users-wrap'>\n      <Segment inverted>\n        <div className='row-wrap between ttl-wrap'>\n          <span className='ttl'>Users</span>\n          <Icon\n            onClick={state.reload}\n            name='refresh' />\n        </div>\n        <hr />\n        <Table\n          celled\n          striped\n          selectable\n          inverted>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Status</Table.HeaderCell>\n              <Table.HeaderCell>Version</Table.HeaderCell>\n              <Table.HeaderCell textAlign='right'>Active</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {state.data?.map((user) => {\n\n              const today = new Date();\n              today.setUTCHours(0, 0, 0, 0);\n\n              const currentWeekDay = today.getDay();\n\n\n              const forWeekStart = new Date(today);\n              forWeekStart.setUTCHours(0, 0, 0, 0);\n              forWeekStart.setDate(today.getDate() - currentWeekDay);\n\n              const weekStart = new Date(forWeekStart);\n              weekStart.setUTCHours(0, 0, 0, 0);\n\n\n              const forWeekEnd = new Date(weekStart);\n              forWeekEnd.setUTCHours(0, 0, 0, 0);\n              forWeekEnd.setDate(weekStart.getDate() + 6);\n\n\n              const weekEnd = new Date(forWeekEnd);\n              weekEnd.setUTCHours(23, 59, 59, 999);\n\n\n              console.log('gaga------------------------------------', JSON.stringify({\n                u: user._id,\n                web: weekStart.toISOString() + ' --- ' + weekEnd.toISOString(),\n                app: user.data?.weekStatus?.startDate,\n                today,\n              }, null, 2));\n\n              return (\n                <Table.Row\n                  key={user._id}\n                  onClick={handleUserDetails(user)}>\n                  <Table.Cell collapsing>{user._id}</Table.Cell>\n                  <Table.Cell collapsing>\n                    <span\n                      className={classNames({\n                        status: true,\n                        done: user.data?.weekStatus?.done === true,\n                        'in-progress': user.data?.weekStatus?.done === false,\n                        unknown: user.data?.weekStatus?.done === undefined,\n                        waiting:\n                          weekStart.toISOString() !==\n                          user.data?.weekStatus?.startDate,\n                      })}\n                    />\n                  </Table.Cell>\n                  <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n                  <Table.Cell textAlign='right'>\n                    {moment(user.updatedAt || user.createdAt).fromNow()}\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan='100'>\n                Total Users {state.data?.length}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;"],"names":["UsersComponent","memo","_state$data","_state$data2","state","useApi","API","getUsers","withLoading","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","currentLocation","JSON","stringify","window","location","href","concat","_id","relative","replace","includes","_jsxs","className","children","Segment","inverted","_jsx","Icon","onClick","reload","name","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","Body","data","map","_user$data","_user$data$weekStatus","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data4","_user$data4$weekStatu","_user$data5","_user$data5$weekStatu","_user$data6","today","Date","setUTCHours","currentWeekDay","getDay","forWeekStart","setDate","getDate","weekStart","forWeekEnd","weekEnd","console","log","u","web","toISOString","app","weekStatus","startDate","Cell","collapsing","classNames","status","done","unknown","undefined","waiting","version","moment","updatedAt","createdAt","fromNow","Footer","colSpan","length","ElementComponent","loading","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","_slicedToArray","setState","useEffect","prevState","_objectSpread","Dimmer","style","position","top","left","right","bottom","active","Loader","collection","iteratee","index","result","isArrayLike","Array","baseEach","value","key","isArray","arrayMap","baseMap","baseIteratee","TableBody","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","size","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement"],"sourceRoot":""}