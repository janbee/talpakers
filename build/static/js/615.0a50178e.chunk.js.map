{"version":3,"file":"static/js/615.0a50178e.chunk.js","mappings":"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","sources":["app/components/user-details/user-details.component.tsx","app/components/user-details/user-settings.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\nimport './user-details.component.scss';\nimport { Header, Icon, Label, Menu, Popup, Segment, Sidebar, SidebarPushable, SidebarPusher } from 'semantic-ui-react';\nimport { EarningsModel, UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport { groupBy, sumBy } from 'lodash';\nimport moment from 'moment';\nimport { useLocation } from 'react-router-dom';\nimport { Money } from '@utilities/utils';\nimport classNames from 'classnames';\nimport { forkJoin } from 'rxjs';\nimport { UserSettingsComponent } from '@components/user-details/user-settings.component';\n\nclass State {\n  loading = true;\n  list: { title: string; data: EarningsModel[] }[] = [];\n  yearTotalWinnings: number = 0;\n  yearTotalWithdrawals: number = 0;\n  userDetails?: UserDetailModel[] | null;\n  settingsOpen = false;\n}\n\nexport const UserDetailsComponent = memo(() => {\n  const { pathname } = useLocation();\n  const emails = pathname.split('/').pop()?.replace('@', '');\n  const [state, setState] = useState<State>(new State());\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n\n    const emailArr = emails?.split(',');\n    forkJoin([\n      API.getBetSummary({ email: { $in: emailArr } }),\n      API.getBonuses({ email: { $in: emailArr } }),\n      API.getWithdrawals({ email: { $in: emailArr } }),\n      API.getUser({ email: { $in: emailArr } }),\n    ]).subscribe(([betSummaryList, bonusList, withdrawalList, userDetails]) => {\n      const filteredBonusList = bonusList?.filter((item) => {\n        return (\n          item.TransactionStatus === 'Approved' &&\n          item.TransactionType === 'Bonus' &&\n          ['IMMEDIATE BONUS', 'Bonus'].includes(item.PaymentMethodInfo) &&\n          item.Amount >= 10\n        );\n      });\n\n      const filteredWithdrawalList = withdrawalList?.filter((item) => {\n        return ['Approved', 'Pending', 'Sending to Processor', 'In Process'].includes(item.TransactionStatus);\n      });\n\n      const dataList = Array.from(Array(moment().isoWeeksInYear()).keys()).map((weekNumber) => {\n        const year = moment().format('YYYY');\n        const date = moment(year).add(weekNumber, 'weeks');\n        const mon = moment(date).format('MMM');\n        const monNumber = moment(date).format('M');\n        const startDate = moment(date).startOf('week').add(1, 'day').toISOString();\n        const endDate = moment(date).endOf('week').toISOString();\n\n        const weekStart = new Date(startDate);\n        const weekEnd = new Date(endDate);\n        weekStart.setUTCHours(0, 0, 0, 0);\n        weekEnd.setUTCHours(23, 59, 59, 999);\n\n        const filteredBetSum = betSummaryList?.filter((item) => {\n          return (\n            item.startDate === weekStart.toISOString() &&\n            item.endDate === weekEnd.toISOString() &&\n            item.year === parseInt(year, 10)\n          );\n        });\n\n        /*\n         * get bonus\n         * reverse to get the first occurrence not the latest\n         * */\n        const filteredBonus = emailArr\n          ?.map((email) => {\n            return filteredBonusList?.reverse().find((item) => {\n              const TransactionDateTime = moment(item.TransactionDateTime).subtract(7, 'days');\n              return (\n                TransactionDateTime.isAfter(weekStart) && TransactionDateTime.isBefore(weekEnd) && item.email === email\n              );\n            });\n          })\n          .filter(Boolean);\n\n        /*\n         * get withdrawal\n         * */\n        const foundWithdrawal = filteredWithdrawalList?.find((item) => {\n          const transactionDate = new Date(item.TransactionDateTime.split('T')[0]);\n          transactionDate.setUTCHours(0, 0, 0, 0);\n          const TransactionDateTime = moment(transactionDate.toISOString());\n\n          return TransactionDateTime.isSameOrAfter(weekStart) && TransactionDateTime.isSameOrBefore(weekEnd);\n        });\n\n        let winnings = 0;\n\n        const bonus = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.bonus || 0);\n        const totalStaked = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalStaked || 0);\n        const totalEarnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n        let approxWinnings = sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.winnings || 0);\n\n        let playAbBonus = sumBy(filteredBonus, (foundBonus) => foundBonus?.Amount || 0);\n        if (filteredBonus?.length !== emailArr?.length) {\n          playAbBonus = bonus;\n        } else {\n          approxWinnings = 0;\n        }\n\n        if (filteredBonus?.length && filteredBetSum?.length) {\n          winnings = playAbBonus + sumBy(filteredBetSum, (betSummary) => betSummary?.betSummary.totalEarnings || 0);\n        }\n\n        return {\n          _id: `${mon}-${weekNumber}`,\n          mon: monNumber + '-' + mon,\n          year,\n          startDate: weekStart.toISOString(),\n          endDate: weekEnd.toISOString(),\n          bonus: playAbBonus || bonus || 0,\n          totalStaked,\n          totalEarnings,\n          winnings,\n          approxWinnings,\n          loading: false,\n          fetch: 0,\n          title: mon,\n          withdrawal: foundWithdrawal,\n        };\n      });\n      const groupedDataList = groupBy(dataList, 'mon');\n      const defaultList = Object.keys(groupedDataList).map((key) => {\n        return {\n          title: key.split('-')[1],\n          data: groupedDataList[key] as unknown as EarningsModel[],\n        };\n      });\n\n      const yearTotalWinnings = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'winnings');\n      });\n\n      const yearTotalWithdrawals = sumBy(defaultList, (item) => {\n        return sumBy(item.data, 'withdrawal.Amount');\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n        yearTotalWinnings,\n        yearTotalWithdrawals,\n        list: defaultList,\n        userDetails,\n      }));\n    });\n  }, [emails]);\n\n  const handleSettingsClick = useCallback(() => {\n    console.log('gaga-------------------------------------', 123123);\n    setState((prevState) => ({\n      ...prevState,\n      settingsOpen: !state.settingsOpen,\n    }));\n  }, [state.settingsOpen]);\n\n  const hasMultiUser = (emails?.split(',') || []).length > 1;\n  return (\n    <div\n      className={classNames({\n        'user-details-wrap': true,\n        'multi-users': hasMultiUser,\n      })}\n    >\n      <SidebarPushable>\n        <Sidebar animation=\"overlay\" onHide={handleSettingsClick} visible={state.settingsOpen} width={'wide'}>\n          <UserSettingsComponent config={{ email: emails as string }} userDetails={state.userDetails?.[0]} />\n        </Sidebar>\n\n        <SidebarPusher>\n          <Segment inverted>\n            <div className=\"ttl\">\n              {!hasMultiUser ? (\n                <div className={'icon-wrap'}>\n                  <Icon onClick={handleSettingsClick} className={'pointer'} name={'bars'} size={'small'} />\n                  <span>{emails}</span>\n                </div>\n              ) : (\n                <span>Multi Users View</span>\n              )}\n              {!hasMultiUser && (\n                <div className=\"row-wrap between\">\n                  <Popup\n                    on=\"hover\"\n                    basic\n                    trigger={<Icon name=\"info circle\" size={'small'} className={'pointer'} />}\n                    position=\"bottom right\"\n                    mouseLeaveDelay={60000}\n                  >\n                    <Menu vertical>\n                      <Menu.Item header>\n                        <Header as=\"h3\">Year {moment().format('YYYY')} Details</Header>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Current Balance</Header>\n                        <p>\n                          <Label color=\"green\">{Money(state.userDetails?.[0].data?.userSession?.cash || 0)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Available Cashout</Header>\n                        <p>\n                          <Label color=\"orange\">{Money(state.userDetails?.[0].data?.userSession?.cashout || 0)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Total Earnings this year</Header>\n                        <p>\n                          <Label color=\"purple\">{Money(state.yearTotalWinnings)}</Label>\n                        </p>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Header as=\"h4\">Total Cashout this year</Header>\n                        <p>\n                          <Label color=\"red\"> {Money(Math.abs(state.yearTotalWithdrawals || 0))}</Label>\n                        </p>\n                      </Menu.Item>\n                    </Menu>\n                  </Popup>\n                </div>\n              )}\n            </div>\n            <hr />\n            <div className=\"user-details-content-wrap\">\n              {state.list.map((mon) => {\n                const total = sumBy(mon.data, 'winnings');\n                return (\n                  <div key={mon.title} className=\"mon-wrap\">\n                    <div className=\"ttl-wrap\">\n                      <Header as=\"h3\" inverted>\n                        {mon.title}\n                      </Header>\n                      <Header\n                        className={classNames({\n                          winnings: total > 0,\n                          losses: total < 0,\n                        })}\n                        as=\"h4\"\n                        inverted\n                      >\n                        {Money(total)}\n                      </Header>\n                    </div>\n                    <hr />\n                    <div className=\"week-wrap\">\n                      {mon.data.map((item) => {\n                        return (\n                          <div key={item._id} className=\"week\">\n                            {!!item.withdrawal && !hasMultiUser && (\n                              <>\n                                {[\n                                  {\n                                    Pending: item.withdrawal.TransactionStatus === 'Pending',\n                                    Approved: item.withdrawal.TransactionStatus === 'Approved',\n                                    Processing: ['In Process', 'Sending to Processor'].includes(\n                                      item.withdrawal.TransactionStatus\n                                    ),\n                                  },\n                                ].map((status, index) => (\n                                  <Popup\n                                    key={index}\n                                    on=\"click\"\n                                    position=\"top center\"\n                                    trigger={\n                                      <div\n                                        className={classNames({\n                                          'has-withdrawal': true,\n                                          yellow: status.Pending,\n                                          green: status.Approved,\n                                          blue: status.Processing,\n                                        })}\n                                      />\n                                    }\n                                    flowing\n                                  >\n                                    <Popup.Header>\n                                      Withdrawal (\n                                      <span\n                                        className={classNames({\n                                          'yellow-light': status.Pending,\n                                          'green-light': status.Approved,\n                                          'blue-light': status.Processing,\n                                        })}\n                                      >\n                                        {item.withdrawal?.TransactionStatus}\n                                      </span>\n                                      )\n                                    </Popup.Header>\n                                    <Popup.Content>\n                                      {`${item.withdrawal?.PaymentMethodInfo} ${Money(item.withdrawal?.Amount || 0)}`}\n                                    </Popup.Content>\n                                  </Popup>\n                                ))}\n                              </>\n                            )}\n\n                            <div className=\"week-date\">\n                              <span>\n                                {moment(item.startDate).utc().format('ddd DD')} -{' '}\n                                {moment(item.endDate).utc().format('ddd DD')}\n                              </span>\n                            </div>\n                            <div className=\"week-content\">\n                              <div className=\"row-wrap\">\n                                <span>Staked</span>\n                                <span>{Money(item.totalStaked)}</span>\n                              </div>\n                              <div className=\"row-wrap\">\n                                <span>Earnings</span>\n                                <span>{Money(item.totalEarnings)}</span>\n                              </div>\n                              <div className=\"row-wrap\">\n                                <span>Bonus</span>\n                                <span>{Money(item.bonus)}</span>\n                              </div>\n\n                              {(item.approxWinnings > 0 && (\n                                <div className=\"row-wrap\">\n                                  <span>Winnings</span>\n\n                                  <Popup\n                                    content=\"Approximate Earnings.\"\n                                    position=\"top center\"\n                                    trigger={\n                                      <span\n                                        className={classNames({\n                                          approx: true,\n                                        })}\n                                      >\n                                        {Money(item.approxWinnings)}\n                                      </span>\n                                    }\n                                  />\n                                </div>\n                              )) || (\n                                <div className=\"row-wrap\">\n                                  <span>Winnings</span>\n                                  <span\n                                    className={classNames({\n                                      winnings: item.winnings > 0,\n                                      losses: item.winnings < 0,\n                                    })}\n                                  >\n                                    {Money(item.winnings)}\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <ElementComponent loading={state.loading} />\n          </Segment>\n        </SidebarPusher>\n      </SidebarPushable>\n    </div>\n  );\n});\n","import React, { ChangeEvent, memo, useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Button, Form, Icon, Input, Segment } from 'semantic-ui-react';\nimport { API } from '@services/api.service';\nimport { UserDetailModel } from '@models/custom.models';\nimport { mergeMap } from 'rxjs';\nimport { get, merge, omit, set } from 'lodash';\nimport moment from 'moment';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\n\ninterface Config {\n  isOpen: boolean;\n  email: string;\n  password: string;\n}\n\ninterface Props {\n  config: {\n    email: string;\n  };\n  userDetails?: UserDetailModel;\n}\n\nclass State {\n  config: Config = {\n    isOpen: false,\n    email: '',\n    password: '',\n  };\n  loading = false;\n\n  userDetails: UserDetailModel = {\n    data: {\n      userSession: {\n        TWO_FACTOR_AUTH: '',\n      },\n    },\n  } as UserDetailModel;\n\n  constructor(props: Props) {\n    console.log('gaga-------------------------asdadasd------------', props);\n    if (props.userDetails) {\n      Object.assign(this.userDetails, props.userDetails);\n      console.log('gaga-----------------asdasdasdasd--------------------', this.userDetails);\n    }\n  }\n}\n\nexport const UserSettingsComponent = memo((props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  console.log('gaga---------state---------------------statestatestate-------', state);\n  useEffect(() => {\n    setState((prevState) => {\n      const newState = merge(prevState, props);\n      return {\n        ...prevState,\n        ...newState,\n      };\n    });\n  }, [props]);\n\n  const handleUpdateClick = useCallback(() => {\n    console.log('gaga----------------------state.config.email---------------', state.config);\n    setState((prevState) => ({ ...prevState, loading: true }));\n    API.$RealmDB\n      .login(state.config.email, state.config.password)\n      .pipe(\n        mergeMap(() => {\n          console.log(\n            'gaga------------------------------------to update',\n            JSON.stringify(\n              {\n                ...state.userDetails,\n                _id: state.config.email,\n              },\n              null,\n              2\n            )\n          );\n          return API.upsertUserData({\n            ...state.userDetails,\n            _id: state.config.email,\n          } as UserDetailModel);\n        })\n      )\n      .subscribe(() => {\n        setState((prevState) => ({ ...prevState, loading: false }));\n      });\n  }, [state.config]);\n\n  const handleOnInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    console.log('gaga-------------------------------------');\n    setState((prevState) => {\n      const newValue = {};\n      const path = e.target.getAttribute('data-value') as string;\n      set(newValue, path, e.target.value);\n\n      const newState = merge(prevState, newValue);\n      console.log('gaga-------------------------------------', newState);\n      return {\n        ...prevState,\n        ...newState,\n      };\n    });\n  }, []);\n\n  const handleUserDetailModelUpdate = useCallback(\n    (e: React.SyntheticEvent<HTMLElement>, data: any) => {\n      e.preventDefault();\n      const value = data['data-value'];\n\n      Object.keys(value).forEach((key) => {\n        const prevValue = get(state.userDetails, key);\n        const nextValue = value[key];\n        if (key === 'updatedAt' && !!prevValue) {\n          delete state.userDetails.updatedAt;\n          Object.assign(state.userDetails, omit(state.userDetails, key));\n        } else if (prevValue !== nextValue) {\n          set(state.userDetails, key, value[key]);\n        } else {\n          Object.assign(state.userDetails, omit(state.userDetails, key));\n        }\n      });\n\n      setState((prevState) => ({\n        ...prevState,\n        userDetails: state.userDetails,\n      }));\n    },\n    [state.userDetails]\n  );\n\n  const handleRemoveFocus = useCallback((e: ChangeEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.target.blur();\n  }, []);\n\n  return (\n    <div\n      className={classNames({\n        'settings-wrap': true,\n        open: state.config.isOpen,\n      })}\n    >\n      <Segment inverted>\n        <span className={'ttl'}>Settings</span>\n        <hr />\n\n        <div className={'content'}>\n          <div className={'content-item'}>\n            <span>For Account</span>\n            <span>{state.config.email}</span>\n          </div>\n          <div className={'content-item'}>\n            <span>Change Time</span>\n            <Button\n              inverted\n              color=\"green\"\n              size={'small'}\n              circular\n              active={!!state.userDetails.updatedAt}\n              data-value={{ updatedAt: moment().subtract(1, 'hour').toDate() }}\n              onClick={handleUserDetailModelUpdate}\n              onMouseOut={handleRemoveFocus}\n            >\n              Yes\n            </Button>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Bet</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"orange\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.bet': '5' }}\n                active={state.userDetails.data?.settings?.bet === '5'}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                5\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"yellow\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.bet': '15' }}\n                active={state.userDetails.data?.settings?.bet === '15'}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                15\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                active={state.userDetails.data?.settings?.bet === '25'}\n                data-value={{ 'data.settings.bet': '25' }}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                25\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Done</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"red\"\n                size={'small'}\n                circular\n                data-value={{ 'data.weekStatus.done': false }}\n                active={state.userDetails.data?.weekStatus?.done === false}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                false\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                data-value={{ 'data.weekStatus.done': true }}\n                active={state.userDetails.data?.weekStatus?.done === true}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                true\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Auto Login</span>\n            <div className={'btn-wrap'}>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"red\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.electronAutoLogin': false }}\n                active={state.userDetails.data?.settings?.electronAutoLogin === false}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                false\n              </Button>\n              <Button\n                tabIndex={-1}\n                inverted\n                color=\"green\"\n                size={'small'}\n                circular\n                data-value={{ 'data.settings.electronAutoLogin': true }}\n                active={state.userDetails.data?.settings?.electronAutoLogin === true}\n                onClick={handleUserDetailModelUpdate}\n                onMouseOut={handleRemoveFocus}\n              >\n                true\n              </Button>\n            </div>\n          </div>\n          <div className={'content-item'}>\n            <span>Set Two Factor Auth</span>\n            <div className={'btn-wrap'}>\n              <Input placeholder=\"Two factor auth\">\n                <input\n                  data-value={'userDetails.data.userSession.TWO_FACTOR_AUTH'}\n                  value={state.userDetails.data.userSession!.TWO_FACTOR_AUTH}\n                  onInput={handleOnInput}\n                />\n              </Input>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <Form onSubmit={handleUpdateClick} className={'footer'}>\n          <Input iconPosition=\"left\" placeholder=\"Password\">\n            <Icon name=\"lock\" />\n\n            <input\n              placeholder={'Password'}\n              data-value={'config.password'}\n              value={state.config.password}\n              onInput={handleOnInput}\n            />\n          </Input>\n          <Button type={'submit'}>Update</Button>\n        </Form>\n      </Segment>\n      <ElementComponent loading={state.loading} />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = '';\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["State","_createClass","_classCallCheck","loading","list","yearTotalWinnings","yearTotalWithdrawals","userDetails","settingsOpen","UserDetailsComponent","memo","_pathname$split$pop","_state$userDetails","_state$userDetails2","_state$userDetails2$","_state$userDetails2$$","_state$userDetails3","_state$userDetails3$","_state$userDetails3$$","emails","useLocation","pathname","split","pop","replace","_useState","useState","_useState2","_slicedToArray","state","setState","useEffect","prevState","_objectSpread","emailArr","forkJoin","API","getBetSummary","email","$in","getBonuses","getWithdrawals","getUser","subscribe","_ref","_ref2","betSummaryList","bonusList","withdrawalList","filteredBonusList","filter","item","TransactionStatus","TransactionType","includes","PaymentMethodInfo","Amount","filteredWithdrawalList","dataList","Array","from","moment","isoWeeksInYear","keys","map","weekNumber","year","format","date","add","mon","monNumber","startDate","startOf","toISOString","endDate","endOf","weekStart","Date","weekEnd","setUTCHours","filteredBetSum","parseInt","filteredBonus","reverse","find","TransactionDateTime","subtract","isAfter","isBefore","Boolean","foundWithdrawal","transactionDate","isSameOrAfter","isSameOrBefore","winnings","bonus","sumBy","betSummary","totalStaked","totalEarnings","approxWinnings","playAbBonus","foundBonus","length","_id","concat","fetch","title","withdrawal","groupedDataList","groupBy","defaultList","Object","key","data","handleSettingsClick","useCallback","console","log","hasMultiUser","_jsx","className","classNames","children","_jsxs","SidebarPushable","Sidebar","animation","onHide","visible","width","UserSettingsComponent","config","SidebarPusher","Segment","inverted","Icon","onClick","name","size","Popup","on","basic","trigger","position","mouseLeaveDelay","Menu","vertical","Item","header","Header","as","Label","color","Money","userSession","cash","cashout","Math","abs","total","losses","_Fragment","Pending","Approved","Processing","status","index","_item$withdrawal","_item$withdrawal2","_item$withdrawal3","yellow","green","blue","flowing","Content","utc","content","approx","ElementComponent","props","isOpen","password","TWO_FACTOR_AUTH","assign","this","_state$userDetails$da","_state$userDetails$da2","_state$userDetails$da3","_state$userDetails$da4","_state$userDetails$da5","_state$userDetails$da6","_state$userDetails$da7","_state$userDetails$da8","_state$userDetails$da9","_state$userDetails$da10","_state$userDetails$da11","_state$userDetails$da12","_state$userDetails$da13","_state$userDetails$da14","newState","merge","handleUpdateClick","$RealmDB","login","pipe","mergeMap","JSON","stringify","upsertUserData","handleOnInput","e","newValue","path","target","getAttribute","set","value","handleUserDetailModelUpdate","preventDefault","forEach","prevValue","get","nextValue","updatedAt","omit","handleRemoveFocus","blur","open","Button","circular","active","toDate","onMouseOut","tabIndex","settings","bet","weekStatus","done","electronAutoLogin","Input","placeholder","onInput","Form","onSubmit","iconPosition","type","Dimmer","style","top","left","right","bottom","Loader"],"sourceRoot":""}