{"version":3,"file":"static/js/978.3ec8502d.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","../node_modules/lodash-es/_createRound.js","../node_modules/lodash-es/round.js","../node_modules/lodash-es/_baseClamp.js","../node_modules/lodash-es/clamp.js","../node_modules/semantic-ui-react/dist/es/modules/Progress/Progress.js"],"sourcesContent":["import React, { FormEvent, memo, SyntheticEvent, useCallback, useMemo } from 'react';\nimport './users.component.scss';\nimport {\n  Checkbox,\n  CheckboxProps,\n  Dropdown,\n  DropdownProps,\n  Icon,\n  Popup,\n  Progress,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport { GetColor, GetDates, GetUserStatus, Money, useApi, useCallbackMemo, UserStatus } from '@utilities/utils';\nimport { UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport moment from 'moment';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport classNames from 'classnames';\nimport { orderBy } from 'lodash';\n\ninterface CustomUserModel extends UserDetailModel {\n  checked?: boolean;\n}\n\nexport const UsersComponent = memo(() => {\n  const [state, setState] = useApi<CustomUserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const accounts = useMemo<CustomUserModel[]>(() => {\n    return [];\n  }, []);\n\n  /*\n   * commit\n   * */\n  const currentLocation = JSON.stringify(window.location.href);\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo(\n    (user: CustomUserModel) => {\n      accounts.length = 0;\n      user.checked = true;\n      accounts.push(user);\n      navigate(`@${user._id}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [navigate],\n  );\n\n  const handleSetAccounts = useCallback(\n    (event: FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n      event.stopPropagation();\n      const user = JSON.parse(data.value as string) as CustomUserModel;\n\n      const foundUser = accounts.find((item) => item.build === user.build);\n      if (foundUser) {\n        foundUser.checked = data.checked;\n      } else {\n        user.checked = data.checked;\n        accounts.push(user);\n      }\n\n      const emails = accounts\n        .filter((item) => item.checked === true)\n        .map((item) => item._id)\n        .join(',');\n\n      navigate(emails?.length === 0 ? '' : `@${emails}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [accounts, currentLocation, navigate],\n  );\n\n  const selected = currentLocation\n    .replaceAll('\"', '')\n    .split('/')\n    .pop()\n    ?.replace('@', '');\n\n  const getInProgressUsersCount = useMemo(() => {\n    return (\n      state.data?.filter((user) => {\n        const inProgress = user.data?.weekStatus?.done === false;\n        const lastUpdate = moment(user.updatedAt || user.createdAt);\n        const duration = moment.duration(lastUpdate.diff(Date.now()));\n        const minutesPassed = Math.abs(duration.asMinutes());\n        return inProgress && minutesPassed < 30;\n      })?.length || 0\n    );\n  }, [state.data]);\n\n  const handleStatusFilter = useCallback(\n    (event: SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n      const sorted = orderBy(\n        state.data,\n        [\n          (user) => {\n            const userStatus = GetUserStatus(user);\n            return userStatus === data.value;\n          },\n          'data.weekStatus.betSummary.betSummary.totalStaked',\n        ],\n        ['desc', 'desc'],\n      );\n      setState((prevState) => ({ ...prevState, data: sorted }));\n    },\n    [state.data],\n  );\n\n  return (\n    <div\n      className={classNames({\n        'users-wrap': true,\n      })}\n    >\n      <Segment inverted>\n        <div className='ttl'>\n          <div>\n            <span>Users</span>\n            {!!accounts.length && (\n              <span>({accounts.filter((item) => item.checked).length})</span>\n            )}\n          </div>\n          <Icon\n            size={'small'}\n            className={'pointer'}\n            onClick={state.reload}\n            name='refresh'\n          />\n        </div>\n        <hr />\n        <div className='tbl-wrap'>\n          <Table\n            celled\n            striped\n            selectable\n            inverted\n            compact>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  className={'multi-select'}\n                  textAlign='center'>\n                  #\n                </Table.HeaderCell>\n                <Table.HeaderCell>App</Table.HeaderCell>\n                <Table.HeaderCell\n                  textAlign='center'\n                  className={'status'}>\n                  <Dropdown\n                    text='Status'\n                    closeOnChange={false}\n                    onChange={handleStatusFilter}\n                    options={[\n                      {\n                        key: UserStatus.IsDone,\n                        value: UserStatus.IsDone,\n                        text: 'Done',\n                      },\n                      {\n                        key: UserStatus.InProgress,\n                        value: UserStatus.InProgress,\n                        text: 'InProgress',\n                      },\n                      {\n                        key: UserStatus.IsWaiting,\n                        value: UserStatus.IsWaiting,\n                        text: 'Waiting',\n                      },\n                    ]}\n                  />\n                  <br />\n                  {!!getInProgressUsersCount && `#${getInProgressUsersCount}`}\n                </Table.HeaderCell>\n                <Table.HeaderCell>Version</Table.HeaderCell>\n\n                <Table.HeaderCell\n                  className={'weekly-summary'}\n                  textAlign='center'\n                >\n                  Weekly Summary\n                  <br />\n                  (Bonus + Earnings = Total)\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'weekly-progress'}\n                  textAlign='center'\n                >\n                  Weekly Progress\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  textAlign='center'\n                  className={'bets'}>\n                  Bets\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'last-update'}\n                  textAlign='right'>\n                  Active\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {state.data?.map((user, index) => {\n                const { weekStart } = GetDates();\n                const userStatus = GetUserStatus(user);\n\n                const isNewWeek =\n                  weekStart.toISOString() !== user.data?.weekStatus?.startDate;\n                const lastUpdate = moment(user.updatedAt || user.createdAt);\n                const duration = moment.duration(lastUpdate.diff(Date.now()));\n                const minutesPassed = Math.abs(duration.asMinutes());\n\n                let totalStaked =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalStaked ||\n                  0;\n                let totalEarnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalEarnings ||\n                  0;\n                let bonus =\n                  user.data?.weekStatus?.betSummary?.betSummary.bonus || 0;\n                let winnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.winnings || 0;\n\n                if (isNewWeek) {\n                  totalStaked = 0;\n                  totalEarnings = 0;\n                  bonus = 0;\n                  winnings = 0;\n                }\n\n                const bgColor =\n                  minutesPassed > 30\n                    ? GetColor(29)\n                    : GetColor(Math.floor(minutesPassed));\n\n                const checkedUsed = accounts.find(\n                  (item) => item.build === user.build,\n                );\n\n                const selectedUsers = accounts\n                  .filter((item) => item.checked)\n                  .map((item) => item.build);\n\n                const emailArr = selected?.split(',') || [];\n\n                return (\n                  <Table.Row\n                    className={classNames({\n                      selected:\n                        selectedUsers.includes(user.build) ||\n                        emailArr.includes(user._id),\n                    })}\n                    key={user._id}\n                    onClick={handleUserDetails(user)}\n                  >\n                    <Table.Cell\n                      selectable\n                      className={'multi-select'}\n                      textAlign='center'\n                    >\n                      <Checkbox\n                        value={JSON.stringify(user)}\n                        checked={!!checkedUsed?.checked}\n                        onChange={handleSetAccounts}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      {!!user.data.weekStatus?.withdrawal && (\n                        <>\n                          {[\n                            {\n                              Pending:\n                                user.data.weekStatus?.withdrawal\n                                  .TransactionStatus === 'Pending',\n                              Approved:\n                                user.data.weekStatus?.withdrawal\n                                  .TransactionStatus === 'Approved',\n                              Processing: [\n                                'In Process',\n                                'Sending to Processor',\n                              ].includes(\n                                user.data.weekStatus?.withdrawal\n                                  .TransactionStatus,\n                              ),\n                            },\n                          ].map((status, index) => (\n                            <Popup\n                              key={index}\n                              position='right center'\n                              trigger={\n                                <div\n                                  className={classNames({\n                                    'has-withdrawal': true,\n                                    yellow: status.Pending,\n                                    green: status.Approved,\n                                    blue: status.Processing,\n                                  })}\n                                />\n                              }\n                              flowing\n                            >\n                              <Popup.Header>\n                                Withdrawal (\n                                <span\n                                  className={classNames({\n                                    'yellow-light': status.Pending,\n                                    'green-light': status.Approved,\n                                    'blue-light': status.Processing,\n                                  })}\n                                >\n                                  {\n                                    user.data.weekStatus?.withdrawal\n                                      ?.TransactionStatus\n                                  }\n                                </span>\n                                )\n                              </Popup.Header>\n                              <Popup.Content>\n                                {`${user.data.weekStatus?.withdrawal\n                                  ?.PaymentMethodInfo} ${Money(\n                                  user.data.weekStatus?.withdrawal?.Amount || 0,\n                                )}`}\n                              </Popup.Content>\n                            </Popup>\n                          ))}\n                        </>\n                      )}\n                      <span>{user.build}</span>\n                    </Table.Cell>\n                    <Table.Cell\n                      collapsing\n                      textAlign='center'\n                      className={'status'}\n                    >\n                      {!state.loading &&\n                        [userStatus].map((s, statusInd) => {\n                          let FIcon = <i\n                            key={statusInd}\n                            className='fa-solid fa-circle-check fa-beat'\n                            style={{ color: 'greenyellow', '--fa-animation-duration': '10s' } as any} />;\n                          if (s === UserStatus.InProgress) {\n                            FIcon = <i\n                              key={statusInd}\n                              className='fa-solid fa-basketball fa-beat'\n                              style={{\n                                color: '#fbbd08',\n                                '--fa-animation-duration': '2s',\n                              } as any} />;\n                          } else if (s === UserStatus.IsWaiting) {\n                            FIcon = <i\n                              key={statusInd}\n                              className='fa-solid fa-circle-stop fa-beat'\n\n                              style={{\n                                color: '#ff5f5f',\n                                '--fa-animation-duration': '5s',\n                              } as any} />;\n                          }\n                          return (\n                            FIcon\n                          );\n                        })}\n                    </Table.Cell>\n                    <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n\n                    <Table.Cell\n                      textAlign='center'\n                      className={'week-summary'}>\n                      <div className={'week-summary-wrap'}>\n                        <span\n                          className={classNames({\n                            win: bonus > 0,\n                            lose: bonus < 0,\n                          })}\n                        >\n                          {Money(bonus)}\n                        </span>\n                        {' + '}\n                        <span\n                          className={classNames({\n                            win: totalEarnings > 0,\n                            lose: totalEarnings < 0,\n                          })}\n                        >\n                          {Money(totalEarnings)}\n                        </span>\n                        {' = '}\n                        <span\n                          className={classNames({\n                            win: winnings > 0,\n                            lose: winnings < 0,\n                          })}\n                        >\n                          {Money(winnings)}\n                        </span>\n                      </div>\n                    </Table.Cell>\n                    <Table.Cell\n                      textAlign='right'\n                      className={'progress'}>\n                      <Progress\n                        indicating\n                        inverted\n                        success={\n                          user.data?.weekStatus?.done === true &&\n                          totalStaked !== 0\n                        }\n                        precision={0}\n                        value={Math.floor(totalStaked)}\n                        progress={'percent'}\n                        total={380}\n                        label={Money(totalStaked)}\n                      />\n                    </Table.Cell>\n                    <Table.Cell\n                      textAlign='center'\n                      className={'bets'}>\n                      {[\n                        {\n                          open:\n                            user.data.weekStatus?.betSummary?.betSummary\n                              .openBets || 0,\n                          settled:\n                            user.data.weekStatus?.betSummary?.betSummary\n                              .settledBets || 0,\n                        },\n                      ].map(({ open, settled }, betsIndex) => {\n                        return (\n                          <div key={betsIndex}>\n                            <span>{open}</span>\n                            <span>{settled}</span>\n                          </div>\n                        );\n                      })}\n                    </Table.Cell>\n                    <Table.Cell\n                      textAlign='right'\n                      className={'last-login'}>\n                      <span style={{ color: bgColor }}>\n                        {lastUpdate.fromNow()}\n                      </span>\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='100'>\n                  Total Users {state.data?.length}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nexport default createRound;\n","import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nexport default round;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nexport default baseClamp;\n","import baseClamp from './_baseClamp.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nexport default clamp;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _round from \"lodash-es/round\";\nimport _clamp from \"lodash-es/clamp\";\nimport _isUndefined from \"lodash-es/isUndefined\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLDivision, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\n/**\n * A progress bar shows the progression of a task.\n */\n\nvar Progress = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Progress, _Component);\n\n  function Progress() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.calculatePercent = function () {\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          total = _this$props.total,\n          value = _this$props.value;\n      if (!_isUndefined(percent)) return percent;\n      if (!_isUndefined(total) && !_isUndefined(value)) return value / total * 100;\n    };\n\n    _this.computeValueText = function (percent) {\n      var _this$props2 = _this.props,\n          progress = _this$props2.progress,\n          total = _this$props2.total,\n          value = _this$props2.value;\n      if (progress === 'value') return value;\n      if (progress === 'ratio') return value + \"/\" + total;\n      return percent + \"%\";\n    };\n\n    _this.getPercent = function () {\n      var _this$props3 = _this.props,\n          precision = _this$props3.precision,\n          progress = _this$props3.progress,\n          total = _this$props3.total,\n          value = _this$props3.value;\n\n      var percent = _clamp(_this.calculatePercent(), 0, 100);\n\n      if (!_isUndefined(total) && !_isUndefined(value) && progress === 'value') {\n        return value / total * 100;\n      }\n\n      if (progress === 'value') return value;\n      if (_isUndefined(precision)) return percent;\n      return _round(percent, precision);\n    };\n\n    _this.isAutoSuccess = function () {\n      var _this$props4 = _this.props,\n          autoSuccess = _this$props4.autoSuccess,\n          percent = _this$props4.percent,\n          total = _this$props4.total,\n          value = _this$props4.value;\n      return autoSuccess && (percent >= 100 || value >= total);\n    };\n\n    _this.renderLabel = function () {\n      var _this$props5 = _this.props,\n          children = _this$props5.children,\n          content = _this$props5.content,\n          label = _this$props5.label;\n      if (!childrenUtils.isNil(children)) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\"\n      }, content);\n      return createHTMLDivision(label, {\n        autoGenerateKey: false,\n        defaultProps: {\n          className: 'label'\n        }\n      });\n    };\n\n    _this.renderProgress = function (percent) {\n      var _this$props6 = _this.props,\n          precision = _this$props6.precision,\n          progress = _this$props6.progress;\n      if (!progress && _isUndefined(precision)) return;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress\"\n      }, _this.computeValueText(percent));\n    };\n\n    return _this;\n  }\n\n  var _proto = Progress.prototype;\n\n  _proto.render = function render() {\n    var _this$props7 = this.props,\n        active = _this$props7.active,\n        attached = _this$props7.attached,\n        className = _this$props7.className,\n        color = _this$props7.color,\n        disabled = _this$props7.disabled,\n        error = _this$props7.error,\n        indicating = _this$props7.indicating,\n        inverted = _this$props7.inverted,\n        size = _this$props7.size,\n        success = _this$props7.success,\n        warning = _this$props7.warning;\n    var classes = cx('ui', color, size, useKeyOnly(active || indicating, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(indicating, 'indicating'), useKeyOnly(inverted, 'inverted'), useKeyOnly(success || this.isAutoSuccess(), 'success'), useKeyOnly(warning, 'warning'), useValueAndKey(attached, 'attached'), 'progress', className);\n    var rest = getUnhandledProps(Progress, this.props);\n    var ElementType = getElementType(Progress, this.props);\n    var percent = this.getPercent() || 0;\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      \"data-percent\": Math.floor(percent)\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      style: {\n        width: percent + \"%\"\n      }\n    }, this.renderProgress(percent)), this.renderLabel());\n  };\n\n  return Progress;\n}(Component);\n\nProgress.handledProps = [\"active\", \"as\", \"attached\", \"autoSuccess\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"error\", \"indicating\", \"inverted\", \"label\", \"percent\", \"precision\", \"progress\", \"size\", \"success\", \"total\", \"value\", \"warning\"];\nProgress.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A progress bar can show activity. */\n  active: PropTypes.bool,\n\n  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n  attached: PropTypes.oneOf(['top', 'bottom']),\n\n  /** Whether success state should automatically trigger when progress completes. */\n  autoSuccess: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A progress bar can have different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A progress bar be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A progress bar can show a error state. */\n  error: PropTypes.bool,\n\n  /** An indicating progress bar visually indicates the current level of progress of a task. */\n  indicating: PropTypes.bool,\n\n  /** A progress bar can have its colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Can be set to either to display progress as percent or ratio. */\n  label: customPropTypes.itemShorthand,\n\n  /** Current percent complete. */\n  percent: customPropTypes.every([customPropTypes.disallow(['total', 'value']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** Decimal point precision for calculated progress. */\n  precision: PropTypes.number,\n\n  /** A progress bar can contain a text value indicating current progress. */\n  progress: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['percent', 'ratio', 'value'])]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'huge', 'massive')),\n\n  /** A progress bar can show a success state. */\n  success: PropTypes.bool,\n\n  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */\n  total: customPropTypes.every([customPropTypes.demand(['value']), customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */\n  value: customPropTypes.every([customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** A progress bar can show a warning state. */\n  warning: PropTypes.bool\n} : {};\nexport default Progress;"],"names":["UsersComponent","memo","_currentLocation$repl","_state$data2","_state$data3","_useApi","useApi","API","getUsers","withLoading","_useApi2","_slicedToArray","state","setState","accounts","useMemo","currentLocation","JSON","stringify","window","location","href","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","length","checked","push","concat","_id","relative","replace","includes","handleSetAccounts","useCallback","event","data","stopPropagation","parse","value","foundUser","find","item","build","emails","filter","map","join","selected","replaceAll","split","pop","getInProgressUsersCount","_state$data","_state$data$filter","_user$data","_user$data$weekStatus","inProgress","weekStatus","done","lastUpdate","moment","updatedAt","createdAt","duration","diff","Date","now","minutesPassed","Math","abs","asMinutes","handleStatusFilter","sorted","orderBy","GetUserStatus","prevState","_objectSpread","_jsxs","className","classNames","children","Segment","inverted","_jsx","Icon","size","onClick","reload","name","Table","celled","striped","selectable","compact","Header","Row","HeaderCell","textAlign","Dropdown","text","closeOnChange","onChange","options","key","UserStatus","IsDone","InProgress","IsWaiting","Body","index","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data3$weekStatu2","_user$data4","_user$data4$weekStatu","_user$data4$weekStatu2","_user$data5","_user$data5$weekStatu","_user$data5$weekStatu2","_user$data6","_user$data6$weekStatu","_user$data6$weekStatu2","_user$data$weekStatus2","_user$data$weekStatus3","_user$data$weekStatus4","_user$data$weekStatus5","_user$data7","_user$data8","_user$data8$weekStatu","_user$data$weekStatus12","_user$data$weekStatus13","_user$data$weekStatus14","_user$data$weekStatus15","weekStart","GetDates","userStatus","isNewWeek","toISOString","startDate","totalStaked","betSummary","totalEarnings","bonus","winnings","bgColor","GetColor","floor","checkedUsed","selectedUsers","emailArr","Cell","Checkbox","collapsing","withdrawal","_Fragment","Pending","TransactionStatus","Approved","Processing","status","_user$data$weekStatus6","_user$data$weekStatus7","_user$data$weekStatus8","_user$data$weekStatus9","_user$data$weekStatus10","_user$data$weekStatus11","Popup","position","trigger","yellow","green","blue","flowing","Content","PaymentMethodInfo","Money","Amount","loading","s","statusInd","FIcon","style","color","version","win","lose","Progress","indicating","success","precision","progress","total","label","open","openBets","settled","settledBets","_ref","betsIndex","fromNow","Footer","colSpan","ElementComponent","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","useEffect","Dimmer","top","left","right","bottom","active","Loader","TableBody","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","columns","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","nativeIsFinite","root","isFinite","nativeMin","min","methodName","func","number","toNumber","toInteger","pair","toString","createRound","lower","upper","undefined","baseClamp","_Component","_this","_len","arguments","args","Array","_key","call","apply","calculatePercent","_this$props","percent","_isUndefined","computeValueText","_this$props2","getPercent","_this$props3","_clamp","_round","isAutoSuccess","_this$props4","autoSuccess","renderLabel","_this$props5","createHTMLDivision","autoGenerateKey","renderProgress","_this$props6","_inheritsLoose","prototype","render","_this$props7","Component"],"sourceRoot":""}