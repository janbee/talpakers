{"version":3,"file":"static/js/978.405fe840.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","../node_modules/lodash-es/_createRound.js","../node_modules/lodash-es/round.js","../node_modules/lodash-es/_baseClamp.js","../node_modules/lodash-es/clamp.js","../node_modules/semantic-ui-react/dist/es/modules/Progress/Progress.js"],"sourcesContent":["import React, { FormEvent, memo, useCallback, useMemo } from 'react';\nimport './users.component.scss';\nimport { Checkbox, CheckboxProps, Icon, Progress, Segment, Table } from 'semantic-ui-react';\nimport { GetColor, GetDates, Money, useApi, useCallbackMemo } from '@utilities/utils';\nimport { UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport moment from 'moment';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport classNames from 'classnames';\n\ninterface CustomUserModel extends UserDetailModel {\n  checked?: boolean;\n}\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<CustomUserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const accounts = useMemo<CustomUserModel[]>(() => {\n    return [];\n  }, []);\n\n  const currentLocation = JSON.stringify(window.location.href);\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo(\n    (user: CustomUserModel) => {\n      accounts.length = 0;\n      user.checked = true;\n      accounts.push(user);\n      navigate(`@${user._id}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [navigate],\n  );\n\n  const handleSetAccounts = useCallback(\n    (event: FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n      event.stopPropagation();\n      const user = JSON.parse(data.value as string) as CustomUserModel;\n\n      const foundUser = accounts.find((item) => item.build === user.build);\n      if (foundUser) {\n        foundUser.checked = data.checked;\n      } else {\n        user.checked = data.checked;\n        accounts.push(user);\n      }\n\n      const emails = accounts\n        .filter((item) => item.checked === true)\n        .map((item) => item._id)\n        .join(',');\n\n      navigate(emails?.length === 0 ? '' : `@${emails}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [accounts, currentLocation, navigate],\n  );\n\n  const selected = currentLocation\n    .replaceAll('\"', '')\n    .split('/')\n    .pop()\n    ?.replace('@', '');\n\n  const getInProgressUsersCount = useMemo(() => {\n    return (\n      state.data?.filter((user) => {\n        const inProgress = user.data?.weekStatus?.done === false;\n        const lastUpdate = moment(user.updatedAt || user.createdAt);\n        const duration = moment.duration(lastUpdate.diff(Date.now()));\n        const minutesPassed = Math.abs(duration.asMinutes());\n        return inProgress && minutesPassed < 30;\n      })?.length || 0\n    );\n  }, [state.data]);\n\n  return (\n    <div\n      className={classNames({\n        'users-wrap': true,\n      })}\n    >\n      <Segment inverted>\n        <div className='ttl'>\n          <div>\n            <span>Users</span>\n            {!!accounts.length && (\n              <span>({accounts.filter((item) => item.checked).length})</span>\n            )}\n          </div>\n          <Icon\n            size={'small'}\n            className={'pointer'}\n            onClick={state.reload}\n            name='refresh'\n          />\n        </div>\n        <hr />\n        <div className='tbl-wrap'>\n          <Table\n            celled\n            striped\n            selectable\n            inverted>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  className={'multi-select'}\n                  textAlign='center'>\n                  #\n                </Table.HeaderCell>\n                <Table.HeaderCell>App</Table.HeaderCell>\n                <Table.HeaderCell name={'status'}>\n                  Status{' '}\n                  {!!getInProgressUsersCount && `#${getInProgressUsersCount}`}\n                </Table.HeaderCell>\n                <Table.HeaderCell>Version</Table.HeaderCell>\n\n                <Table.HeaderCell\n                  className={'weekly-summary'}\n                  textAlign='center'\n                >\n                  Weekly Summary\n                  <br />\n                  (Bonus + Earnings = Total)\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'weekly-progress'}\n                  textAlign='center'\n                >\n                  Weekly Progress\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  textAlign='center'\n                >\n                  OpenBets\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  textAlign='center'\n                >\n                  SettledBets\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'last-update'}\n                  textAlign='right'>\n                  Active\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {state.data?.map((user, index) => {\n                const { weekStart } = GetDates();\n\n                const inProgress = user.data?.weekStatus?.done === false;\n                const lastUpdate = moment(user.updatedAt || user.createdAt);\n                const duration = moment.duration(lastUpdate.diff(Date.now()));\n                const minutesPassed = Math.abs(duration.asMinutes());\n                let isIdle = false;\n                if (inProgress && minutesPassed >= 30) {\n                  isIdle = true;\n                }\n\n                const waiting =\n                  weekStart.toISOString() !== user.data?.weekStatus?.startDate;\n\n                let totalStaked =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalStaked ||\n                  0;\n                let totalEarnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalEarnings ||\n                  0;\n                let bonus =\n                  user.data?.weekStatus?.betSummary?.betSummary.bonus || 0;\n                let winnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.winnings || 0;\n                if (waiting) {\n                  totalStaked = 0;\n                  totalEarnings = 0;\n                  bonus = 0;\n                  winnings = 0;\n                }\n\n                const bgColor =\n                  minutesPassed > 30\n                    ? GetColor(29)\n                    : GetColor(Math.floor(minutesPassed));\n\n                const checkedUsed = accounts.find(\n                  (item) => item.build === user.build,\n                );\n\n                const selectedUsers = accounts\n                  .filter((item) => item.checked)\n                  .map((item) => item.build);\n\n                const emailArr = selected?.split(',') || [];\n\n                return (\n                  <Table.Row\n                    className={classNames({\n                      selected:\n                        selectedUsers.includes(user.build) ||\n                        emailArr.includes(user._id),\n                    })}\n                    key={user._id}\n                    onClick={handleUserDetails(user)}\n                  >\n                    <Table.Cell\n                      selectable\n                      className={'multi-select'}\n                      textAlign='center'\n                    >\n                      <Checkbox\n                        value={JSON.stringify(user)}\n                        checked={!!checkedUsed?.checked}\n                        onChange={handleSetAccounts}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span>{user.build}</span>\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span\n                        className={classNames({\n                          status: true,\n                          done: user.data?.weekStatus?.done === true,\n                          'in-progress': inProgress,\n                          unknown: user.data?.weekStatus?.done === undefined,\n                          waiting: waiting || isIdle,\n                        })}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n\n                    <Table.Cell textAlign='center'>\n                      <div className={'week-summary-wrap'}>\n                        <span\n                          className={classNames({\n                            win: bonus > 0,\n                            lose: bonus < 0,\n                          })}\n                        >\n                          {Money(bonus)}\n                        </span>\n                        {' + '}\n                        <span\n                          className={classNames({\n                            win: totalEarnings > 0,\n                            lose: totalEarnings < 0,\n                          })}\n                        >\n                          {Money(totalEarnings)}\n                        </span>\n                        {' = '}\n                        <span\n                          className={classNames({\n                            win: winnings > 0,\n                            lose: winnings < 0,\n                          })}\n                        >\n                          {Money(winnings)}\n                        </span>\n                      </div>\n                    </Table.Cell>\n                    <Table.Cell textAlign='right'>\n                      <Progress\n                        indicating\n                        inverted\n                        success={\n                          user.data?.weekStatus?.done === true &&\n                          totalStaked !== 0\n                        }\n                        precision={0}\n                        value={Math.floor(totalStaked)}\n                        progress={'percent'}\n                        total={385}\n                        label={Money(totalStaked)}\n                      />\n                    </Table.Cell>\n                    <Table.Cell textAlign='center'>\n                      {user.data.weekStatus?.betSummary?.betSummary.openBets}\n                    </Table.Cell>\n                    <Table.Cell textAlign='center'>\n                      {user.data.weekStatus?.betSummary?.betSummary.settledBets}\n                    </Table.Cell>\n                    <Table.Cell\n                      textAlign='right'>\n                      <span style={{ color: bgColor }}>\n                        {lastUpdate.fromNow()}\n                      </span>\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='100'>\n                  Total Users {state.data?.length}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nexport default createRound;\n","import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nexport default round;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nexport default baseClamp;\n","import baseClamp from './_baseClamp.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nexport default clamp;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _round from \"lodash-es/round\";\nimport _clamp from \"lodash-es/clamp\";\nimport _isUndefined from \"lodash-es/isUndefined\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLDivision, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\n/**\n * A progress bar shows the progression of a task.\n */\n\nvar Progress = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Progress, _Component);\n\n  function Progress() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.calculatePercent = function () {\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          total = _this$props.total,\n          value = _this$props.value;\n      if (!_isUndefined(percent)) return percent;\n      if (!_isUndefined(total) && !_isUndefined(value)) return value / total * 100;\n    };\n\n    _this.computeValueText = function (percent) {\n      var _this$props2 = _this.props,\n          progress = _this$props2.progress,\n          total = _this$props2.total,\n          value = _this$props2.value;\n      if (progress === 'value') return value;\n      if (progress === 'ratio') return value + \"/\" + total;\n      return percent + \"%\";\n    };\n\n    _this.getPercent = function () {\n      var _this$props3 = _this.props,\n          precision = _this$props3.precision,\n          progress = _this$props3.progress,\n          total = _this$props3.total,\n          value = _this$props3.value;\n\n      var percent = _clamp(_this.calculatePercent(), 0, 100);\n\n      if (!_isUndefined(total) && !_isUndefined(value) && progress === 'value') {\n        return value / total * 100;\n      }\n\n      if (progress === 'value') return value;\n      if (_isUndefined(precision)) return percent;\n      return _round(percent, precision);\n    };\n\n    _this.isAutoSuccess = function () {\n      var _this$props4 = _this.props,\n          autoSuccess = _this$props4.autoSuccess,\n          percent = _this$props4.percent,\n          total = _this$props4.total,\n          value = _this$props4.value;\n      return autoSuccess && (percent >= 100 || value >= total);\n    };\n\n    _this.renderLabel = function () {\n      var _this$props5 = _this.props,\n          children = _this$props5.children,\n          content = _this$props5.content,\n          label = _this$props5.label;\n      if (!childrenUtils.isNil(children)) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\"\n      }, content);\n      return createHTMLDivision(label, {\n        autoGenerateKey: false,\n        defaultProps: {\n          className: 'label'\n        }\n      });\n    };\n\n    _this.renderProgress = function (percent) {\n      var _this$props6 = _this.props,\n          precision = _this$props6.precision,\n          progress = _this$props6.progress;\n      if (!progress && _isUndefined(precision)) return;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress\"\n      }, _this.computeValueText(percent));\n    };\n\n    return _this;\n  }\n\n  var _proto = Progress.prototype;\n\n  _proto.render = function render() {\n    var _this$props7 = this.props,\n        active = _this$props7.active,\n        attached = _this$props7.attached,\n        className = _this$props7.className,\n        color = _this$props7.color,\n        disabled = _this$props7.disabled,\n        error = _this$props7.error,\n        indicating = _this$props7.indicating,\n        inverted = _this$props7.inverted,\n        size = _this$props7.size,\n        success = _this$props7.success,\n        warning = _this$props7.warning;\n    var classes = cx('ui', color, size, useKeyOnly(active || indicating, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(indicating, 'indicating'), useKeyOnly(inverted, 'inverted'), useKeyOnly(success || this.isAutoSuccess(), 'success'), useKeyOnly(warning, 'warning'), useValueAndKey(attached, 'attached'), 'progress', className);\n    var rest = getUnhandledProps(Progress, this.props);\n    var ElementType = getElementType(Progress, this.props);\n    var percent = this.getPercent() || 0;\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      \"data-percent\": Math.floor(percent)\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      style: {\n        width: percent + \"%\"\n      }\n    }, this.renderProgress(percent)), this.renderLabel());\n  };\n\n  return Progress;\n}(Component);\n\nProgress.handledProps = [\"active\", \"as\", \"attached\", \"autoSuccess\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"error\", \"indicating\", \"inverted\", \"label\", \"percent\", \"precision\", \"progress\", \"size\", \"success\", \"total\", \"value\", \"warning\"];\nProgress.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A progress bar can show activity. */\n  active: PropTypes.bool,\n\n  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n  attached: PropTypes.oneOf(['top', 'bottom']),\n\n  /** Whether success state should automatically trigger when progress completes. */\n  autoSuccess: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A progress bar can have different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A progress bar be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A progress bar can show a error state. */\n  error: PropTypes.bool,\n\n  /** An indicating progress bar visually indicates the current level of progress of a task. */\n  indicating: PropTypes.bool,\n\n  /** A progress bar can have its colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Can be set to either to display progress as percent or ratio. */\n  label: customPropTypes.itemShorthand,\n\n  /** Current percent complete. */\n  percent: customPropTypes.every([customPropTypes.disallow(['total', 'value']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** Decimal point precision for calculated progress. */\n  precision: PropTypes.number,\n\n  /** A progress bar can contain a text value indicating current progress. */\n  progress: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['percent', 'ratio', 'value'])]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'huge', 'massive')),\n\n  /** A progress bar can show a success state. */\n  success: PropTypes.bool,\n\n  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */\n  total: customPropTypes.every([customPropTypes.demand(['value']), customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */\n  value: customPropTypes.every([customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** A progress bar can show a warning state. */\n  warning: PropTypes.bool\n} : {};\nexport default Progress;"],"names":["UsersComponent","memo","_currentLocation$repl","_state$data2","_state$data3","state","useApi","API","getUsers","withLoading","accounts","useMemo","currentLocation","JSON","stringify","window","location","href","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","length","checked","push","concat","_id","relative","replace","includes","handleSetAccounts","useCallback","event","data","stopPropagation","parse","value","foundUser","find","item","build","emails","filter","map","join","selected","replaceAll","split","pop","getInProgressUsersCount","_state$data","_state$data$filter","_user$data","_user$data$weekStatus","inProgress","weekStatus","done","lastUpdate","moment","updatedAt","createdAt","duration","diff","Date","now","minutesPassed","Math","abs","asMinutes","_jsxs","className","classNames","children","Segment","inverted","_jsx","Icon","size","onClick","reload","name","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","Body","index","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data4","_user$data4$weekStatu","_user$data4$weekStatu2","_user$data5","_user$data5$weekStatu","_user$data5$weekStatu2","_user$data6","_user$data6$weekStatu","_user$data6$weekStatu2","_user$data7","_user$data7$weekStatu","_user$data7$weekStatu2","_user$data8","_user$data8$weekStatu","_user$data9","_user$data9$weekStatu","_user$data10","_user$data11","_user$data11$weekStat","_user$data$weekStatus2","_user$data$weekStatus3","_user$data$weekStatus4","_user$data$weekStatus5","weekStart","GetDates","isIdle","waiting","toISOString","startDate","totalStaked","betSummary","totalEarnings","bonus","winnings","bgColor","GetColor","floor","checkedUsed","selectedUsers","emailArr","Cell","Checkbox","onChange","collapsing","status","unknown","undefined","version","win","lose","Money","Progress","indicating","success","precision","progress","total","label","openBets","settledBets","style","color","fromNow","Footer","colSpan","ElementComponent","loading","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","_slicedToArray","setState","useEffect","prevState","_objectSpread","Dimmer","position","top","left","right","bottom","active","Loader","TableBody","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","columns","compact","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","nativeIsFinite","root","isFinite","nativeMin","min","methodName","func","number","toNumber","toInteger","pair","toString","createRound","lower","upper","baseClamp","_Component","_this","_len","arguments","args","Array","_key","call","apply","calculatePercent","_this$props","percent","_isUndefined","computeValueText","_this$props2","getPercent","_this$props3","_clamp","_round","isAutoSuccess","_this$props4","autoSuccess","renderLabel","_this$props5","createHTMLDivision","autoGenerateKey","renderProgress","_this$props6","_inheritsLoose","prototype","render","_this$props7","Component"],"sourceRoot":""}