{"version":3,"file":"static/js/978.ed70d509.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx"],"sourcesContent":["import React, { FormEvent, memo, useCallback, useMemo } from 'react';\nimport './users.component.scss';\nimport { Checkbox, CheckboxProps, Icon, Progress, Segment, Table } from 'semantic-ui-react';\nimport { GetColor, GetDates, Money, useApi, useCallbackMemo } from '@utilities/utils';\nimport { UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport moment from 'moment';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport classNames from 'classnames';\n\ninterface CustomUserModel extends UserDetailModel {\n  checked?: boolean;\n}\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<CustomUserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const accounts = useMemo<CustomUserModel[]>(() => {\n    return [];\n  }, []);\n\n\n  const currentLocation = JSON.stringify(window.location.href);\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo(\n    (user: CustomUserModel) => {\n      accounts.length = 0;\n      user.checked = true;\n      accounts.push(user);\n      navigate(`@${user._id}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [navigate],\n  );\n\n  const handleSetAccounts = useCallback(\n    (event: FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n      event.stopPropagation();\n      const user = JSON.parse(data.value as string) as CustomUserModel;\n\n      const foundUser = accounts.find((item) => item.build === user.build);\n      if (foundUser) {\n        foundUser.checked = data.checked;\n      } else {\n        user.checked = data.checked;\n        accounts.push(user);\n      }\n\n      const emails = accounts\n        .filter((item) => item.checked === true)\n        .map((item) => item._id)\n        .join(',');\n\n      navigate(emails?.length === 0 ? '' : `@${emails}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [accounts, currentLocation, navigate],\n  );\n\n  const selected = currentLocation\n    .replaceAll('\"', '')\n    .split('/')\n    .pop()\n    ?.replace('@', '');\n\n  const getInProgressUsersCount = useMemo(() => {\n    return (\n      state.data?.filter((user) => {\n        const inProgress = user.data?.weekStatus?.done === false;\n        const lastUpdate = moment(user.updatedAt || user.createdAt);\n        const duration = moment.duration(lastUpdate.diff(Date.now()));\n        const minutesPassed = Math.abs(duration.asMinutes());\n        return inProgress && minutesPassed < 30;\n      })?.length || 0\n    );\n  }, [state.data]);\n\n\n  return (\n    <div\n      className={classNames({\n        'users-wrap': true,\n      })}\n    >\n      <Segment inverted>\n        <div className='ttl'>\n          <div>\n            <span>Users</span>\n            {!!accounts.length && (\n              <span>\n              ({accounts.filter((item) => item.checked).length})\n            </span>\n            )}\n          </div>\n          <Icon\n            size={'small'}\n            className={'pointer'}\n            onClick={state.reload}\n            name='refresh' />\n        </div>\n        <hr />\n        <div className='tbl-wrap'>\n          <Table\n            celled\n            striped\n            selectable\n            inverted>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  className={'multi-select'}\n                  textAlign='center'>\n                  #\n                </Table.HeaderCell>\n                <Table.HeaderCell>App</Table.HeaderCell>\n                <Table.HeaderCell\n                  name={'status'}\n                >\n                  Status{' '}\n                  {!!getInProgressUsersCount && `#${getInProgressUsersCount}`}\n\n                </Table.HeaderCell>\n                <Table.HeaderCell>Version</Table.HeaderCell>\n\n                <Table.HeaderCell\n                  className={'weekly-summary'}\n                  textAlign='center'\n                >\n                  Weekly Summary\n                  <br />\n                  (Bonus + Earnings = Total)\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'weekly-progress'}\n                  textAlign='center'\n                >\n                  Weekly Progress\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  className={'last-update'}\n                  textAlign='right'>\n                  Active\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {state.data?.map((user, index) => {\n                const { weekStart } = GetDates();\n\n                const inProgress = user.data?.weekStatus?.done === false;\n                const lastUpdate = moment(user.updatedAt || user.createdAt);\n                const duration = moment.duration(lastUpdate.diff(Date.now()));\n                const minutesPassed = Math.abs(duration.asMinutes());\n                let isIdle = false;\n                if (inProgress && minutesPassed >= 30) {\n                  isIdle = true;\n                }\n\n                const waiting = weekStart.toISOString() !== user.data?.weekStatus?.startDate;\n\n\n                let totalStaked =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalStaked ||\n                  0;\n                let totalEarnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.totalEarnings ||\n                  0;\n                let bonus =\n                  user.data?.weekStatus?.betSummary?.betSummary.bonus || 0;\n                let winnings =\n                  user.data?.weekStatus?.betSummary?.betSummary.winnings || 0;\n                if (waiting) {\n                  totalStaked = 0;\n                  totalEarnings = 0;\n                  bonus = 0;\n                  winnings = 0;\n                }\n\n                const bgColor =\n                  minutesPassed > 30\n                    ? GetColor(29)\n                    : GetColor(Math.floor(minutesPassed));\n\n                const checkedUsed = accounts.find(\n                  (item) => item.build === user.build,\n                );\n\n                const selectedUsers = accounts\n                  .filter((item) => item.checked)\n                  .map((item) => item.build);\n\n                const emailArr = selected?.split(',') || [];\n\n                return (\n                  <Table.Row\n                    className={classNames({\n                      selected:\n                        selectedUsers.includes(user.build) ||\n                        emailArr.includes(user._id),\n                    })}\n                    key={user._id}\n                    onClick={handleUserDetails(user)}\n                  >\n                    <Table.Cell\n                      selectable\n                      className={'multi-select'}\n                      textAlign='center'\n                    >\n                      <Checkbox\n                        value={JSON.stringify(user)}\n                        checked={!!checkedUsed?.checked}\n                        onChange={handleSetAccounts}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span>{user.build}</span>\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span\n                        className={classNames({\n                          status: true,\n                          done: user.data?.weekStatus?.done === true,\n                          'in-progress': inProgress,\n                          unknown: user.data?.weekStatus?.done === undefined,\n                          waiting: waiting || isIdle,\n                        })}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n\n                    <Table.Cell textAlign='center'>\n                      <div className={'week-summary-wrap'}>\n                        <span\n                          className={classNames({\n                            win: bonus > 0,\n                            lose: bonus < 0,\n                          })}\n                        >\n                          {Money(bonus)}\n                        </span>\n                        {' + '}\n                        <span\n                          className={classNames({\n                            win: totalEarnings > 0,\n                            lose: totalEarnings < 0,\n                          })}\n                        >\n                          {Money(totalEarnings)}\n                        </span>\n                        {' = '}\n                        <span\n                          className={classNames({\n                            win: winnings > 0,\n                            lose: winnings < 0,\n                          })}\n                        >\n                          {Money(winnings)}\n                        </span>\n                      </div>\n                    </Table.Cell>\n                    <Table.Cell textAlign='right'>\n                      <Progress\n                        indicating\n                        inverted\n                        success={\n                          user.data?.weekStatus?.done === true &&\n                          totalStaked !== 0\n                        }\n                        precision={0}\n                        value={Math.floor(totalStaked)}\n                        progress={'percent'}\n                        total={385}\n                        label={Money(totalStaked)}\n                      />\n                    </Table.Cell>\n                    <Table.Cell\n                      textAlign='right'\n                      onDoubleClick={() => console.log('gaga-------------------------------------', 12312312)}>\n                      <span style={{ color: bgColor }}>\n                        {lastUpdate.fromNow()}\n                      </span>\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='100'>\n                  Total Users {state.data?.length}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n"],"names":["UsersComponent","memo","_currentLocation$repl","_state$data2","_state$data3","state","useApi","API","getUsers","withLoading","accounts","useMemo","currentLocation","JSON","stringify","window","location","href","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","length","checked","push","concat","_id","relative","replace","includes","handleSetAccounts","useCallback","event","data","stopPropagation","parse","value","foundUser","find","item","build","emails","filter","map","join","selected","replaceAll","split","pop","getInProgressUsersCount","_state$data","_state$data$filter","_user$data","_user$data$weekStatus","inProgress","weekStatus","done","lastUpdate","moment","updatedAt","createdAt","duration","diff","Date","now","minutesPassed","Math","abs","asMinutes","_jsxs","className","classNames","children","Segment","inverted","_jsx","Icon","size","onClick","reload","name","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","Body","index","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data4","_user$data4$weekStatu","_user$data4$weekStatu2","_user$data5","_user$data5$weekStatu","_user$data5$weekStatu2","_user$data6","_user$data6$weekStatu","_user$data6$weekStatu2","_user$data7","_user$data7$weekStatu","_user$data7$weekStatu2","_user$data8","_user$data8$weekStatu","_user$data9","_user$data9$weekStatu","_user$data10","_user$data11","_user$data11$weekStat","weekStart","GetDates","isIdle","waiting","toISOString","startDate","totalStaked","betSummary","totalEarnings","bonus","winnings","bgColor","GetColor","floor","checkedUsed","selectedUsers","emailArr","Cell","Checkbox","onChange","collapsing","status","unknown","undefined","version","win","lose","Money","Progress","indicating","success","precision","progress","total","label","onDoubleClick","console","log","style","color","fromNow","Footer","colSpan","ElementComponent","loading","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","_slicedToArray","setState","useEffect","prevState","_objectSpread","Dimmer","position","top","left","right","bottom","active","Loader"],"sourceRoot":""}