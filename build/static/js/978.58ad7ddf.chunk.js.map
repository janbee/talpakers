{"version":3,"file":"static/js/978.58ad7ddf.chunk.js","mappings":"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","sources":["app/components/users/users.component.tsx","app/shared/component/element-loader.component.tsx","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","../node_modules/lodash-es/set.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"sourcesContent":["import React, { FormEvent, memo, useCallback, useMemo } from 'react';\nimport './users.component.scss';\nimport { Checkbox, CheckboxProps, Icon, Segment, Table } from 'semantic-ui-react';\nimport { GetColor, Money, useApi, useCallbackMemo } from '@utilities/utils';\nimport { UserDetailModel } from '@models/custom.models';\nimport { API } from '@services/api.service';\nimport moment from 'moment';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ElementComponent } from '@app/shared/component/element-loader.component';\nimport classNames from 'classnames';\n\ninterface CustomUserModel extends UserDetailModel {\n  checked?: boolean;\n}\n\nexport const UsersComponent = memo(() => {\n  const state = useApi<CustomUserModel[]>(() => API.getUsers(), {\n    withLoading: false,\n  });\n\n  const accounts = useMemo<CustomUserModel[]>(() => {\n    return [];\n  }, []);\n\n  const currentLocation = JSON.stringify(window.location.href);\n  const navigate = useNavigate();\n\n  const handleUserDetails = useCallbackMemo(\n    (user: CustomUserModel) => {\n      accounts.length = 0;\n      user.checked = true;\n      accounts.push(user);\n      navigate(`@${user._id}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [navigate],\n  );\n\n  const handleSetAccounts = useCallback(\n    (event: FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n      event.stopPropagation();\n      const user = JSON.parse(data.value as string) as CustomUserModel;\n\n      const foundUser = accounts.find((item) => item.build === user.build);\n      if (foundUser) {\n        foundUser.checked = data.checked;\n      } else {\n        user.checked = data.checked;\n        accounts.push(user);\n      }\n\n      const emails = accounts\n        .filter((item) => item.checked === true)\n        .map((item) => item._id)\n        .join(',');\n\n      navigate(emails?.length === 0 ? '' : `@${emails}`, {\n        relative: 'route',\n        replace: currentLocation.includes('@'),\n      });\n    },\n    [],\n  );\n\n  const selected = currentLocation\n    .replaceAll('\"', '')\n    .split('/')\n    .pop()\n    ?.replace('@', '');\n\n  return (\n    <div\n      className={classNames({\n        'users-wrap': true,\n      })}\n    >\n      <Segment inverted>\n        <div className='row-wrap between ttl-wrap'>\n          <div>\n            <span className='ttl'>Users</span>\n            {!!accounts.length && (\n              <span className='ttl'>\n                ({accounts.filter((item) => item.checked).length})\n              </span>\n            )}\n          </div>\n          <Icon\n            onClick={state.reload}\n            name='refresh' />\n        </div>\n        <hr />\n        <div className='tbl-wrap'>\n          <Table\n            celled\n            striped\n            selectable\n            inverted>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  className={'multi-select'}\n                  textAlign='center'>\n                  #\n                </Table.HeaderCell>\n                <Table.HeaderCell>App</Table.HeaderCell>\n                <Table.HeaderCell>Status</Table.HeaderCell>\n                <Table.HeaderCell>Version</Table.HeaderCell>\n                <Table.HeaderCell\n                  textAlign='center'\n                  width={1}>\n                  Week Winnings\n                </Table.HeaderCell>\n                <Table.HeaderCell textAlign='right'>Active</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {state.data?.map((user, index) => {\n                const tz = new Date().getTimezoneOffset() * 60000;\n                const today = new Date(new Date().getTime() - tz);\n                today.setUTCHours(0, 0, 0, 0);\n\n                const currentWeekDay = today.getDay();\n\n                const forWeekStart = new Date(today);\n                forWeekStart.setUTCHours(0, 0, 0, 0);\n                forWeekStart.setDate(today.getDate() - currentWeekDay);\n\n                const weekStart = new Date(forWeekStart);\n                weekStart.setUTCHours(0, 0, 0, 0);\n\n                const forWeekEnd = new Date(weekStart);\n                forWeekEnd.setUTCHours(0, 0, 0, 0);\n                forWeekEnd.setDate(weekStart.getDate() + 6);\n\n                const weekEnd = new Date(forWeekEnd);\n                weekEnd.setUTCHours(23, 59, 59, 999);\n\n                const inProgress = user.data?.weekStatus?.done === false;\n                const lastUpdate = moment(user.updatedAt || user.createdAt);\n                const duration = moment.duration(lastUpdate.diff(Date.now()));\n                const minutesPassed = Math.abs(duration.asMinutes());\n                let isIdle = false;\n                if (inProgress && minutesPassed >= 30) {\n                  isIdle = true;\n                }\n\n                const bgColor = minutesPassed > 30 ? GetColor(29) : GetColor(Math.floor(minutesPassed));\n\n\n                const checkedUsed = accounts.find(\n                  (item) => item.build === user.build,\n                );\n                const selectedUsers = accounts\n                  .filter((item) => item.checked)\n                  .map((item) => item.build);\n\n                const emailArr = selected?.split(',') || [];\n\n                return (\n                  <Table.Row\n                    className={classNames({\n                      selected:\n                        selectedUsers.includes(user.build) ||\n                        emailArr.includes(user._id),\n                    })}\n                    key={user._id}\n                    onClick={handleUserDetails(user)}\n                  >\n                    <Table.Cell\n                      selectable\n                      className={'multi-select'}\n                      textAlign='center'\n                    >\n                      <Checkbox\n                        value={JSON.stringify(user)}\n                        checked={!!checkedUsed?.checked}\n                        onChange={handleSetAccounts}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span\n                        onClick={(a) => {\n                        }}>{user.build}</span>\n                    </Table.Cell>\n                    <Table.Cell collapsing>\n                      <span\n                        className={classNames({\n                          status: true,\n                          done: user.data?.weekStatus?.done === true,\n                          'in-progress': inProgress,\n                          unknown: user.data?.weekStatus?.done === undefined,\n                          waiting:\n                            weekStart.toISOString() !==\n                            user.data?.weekStatus?.startDate || isIdle,\n                        })}\n                      />\n                    </Table.Cell>\n                    <Table.Cell collapsing>{user.data?.version}</Table.Cell>\n                    <Table.Cell textAlign='center'>\n                      {\n                        <span\n                          className={classNames({\n                            win: (user.data?.weekStatus?.winnings || 0) > 0,\n                            lose: (user.data?.weekStatus?.winnings || 0) < 0,\n                          })}\n                        >\n                          {Money(user.data?.weekStatus?.winnings || 0)}\n                        </span>\n                      }\n                    </Table.Cell>\n                    <Table.Cell textAlign='right'>\n                      <span style={{ color: bgColor }}>{lastUpdate.fromNow()}</span>\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='100'>\n                  Total Users {state.data?.length}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </div>\n        <ElementComponent loading={state.loading} />\n      </Segment>\n      <Outlet />\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  loading: boolean;\n  content?: string;\n}\n\nclass State {\n  loading = false;\n  content? = \"\";\n\n  constructor(props: Props) {\n    this.loading = props.loading;\n    this.content = props.content;\n  }\n}\n\nexport const ElementComponent = (props: Props) => {\n  const [state, setState] = useState<State>(new State(props));\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, loading: props.loading }));\n  }, [props.loading]);\n\n  return (\n    <Dimmer\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...(state.loading ? { active: true } : {})}\n    >\n      <Loader />\n    </Dimmer>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n\n  function Checkbox() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        disabled = _this$props3.disabled,\n        label = _this$props3.label,\n        id = _this$props3.id,\n        name = _this$props3.name,\n        radio = _this$props3.radio,\n        readOnly = _this$props3.readOnly,\n        slider = _this$props3.slider,\n        toggle = _this$props3.toggle,\n        type = _this$props3.type,\n        value = _this$props3.value;\n    var _this$state4 = this.state,\n        checked = _this$state4.checked,\n        indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n      htmlProps: htmlInputAttrs\n    }),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n\n  return Checkbox;\n}(Component);\n\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];"],"names":["UsersComponent","memo","_currentLocation$repl","_state$data","_state$data2","state","useApi","API","getUsers","withLoading","accounts","useMemo","currentLocation","JSON","stringify","window","location","href","navigate","useNavigate","handleUserDetails","useCallbackMemo","user","length","checked","push","concat","_id","relative","replace","includes","handleSetAccounts","useCallback","event","data","stopPropagation","parse","value","foundUser","find","item","build","emails","filter","map","join","selected","replaceAll","split","pop","_jsxs","className","classNames","children","Segment","inverted","_jsx","Icon","onClick","reload","name","Table","celled","striped","selectable","Header","Row","HeaderCell","textAlign","width","Body","index","_user$data","_user$data$weekStatus","_user$data2","_user$data2$weekStatu","_user$data3","_user$data3$weekStatu","_user$data4","_user$data4$weekStatu","_user$data5","_user$data6","_user$data6$weekStatu","_user$data7","_user$data7$weekStatu","_user$data8","_user$data8$weekStatu","tz","Date","getTimezoneOffset","today","getTime","setUTCHours","currentWeekDay","getDay","forWeekStart","setDate","getDate","weekStart","forWeekEnd","inProgress","weekStatus","done","lastUpdate","moment","updatedAt","createdAt","duration","diff","now","minutesPassed","Math","abs","asMinutes","isIdle","bgColor","GetColor","floor","checkedUsed","selectedUsers","emailArr","Cell","Checkbox","onChange","collapsing","a","status","unknown","undefined","waiting","toISOString","startDate","version","win","winnings","lose","Money","style","color","fromNow","Footer","colSpan","ElementComponent","loading","Outlet","State","_createClass","props","_classCallCheck","content","this","_useState","useState","_useState2","_slicedToArray","setState","useEffect","prevState","_objectSpread","Dimmer","position","top","left","right","bottom","active","Loader","TableBody","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","handledProps","defaultProps","as","propTypes","TableCell","disabled","error","icon","negative","positive","singleLine","verticalAlign","warning","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","columns","compact","definition","fixed","footerRow","headerRow","headerRows","padded","renderBodyRow","size","sortable","stackable","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","object","path","baseSet","_Component","_this","_len","arguments","args","Array","_key","call","apply","inputRef","createRef","labelRef","canToggle","_this$props","radio","readOnly","computeTabIndex","_this$props2","tabIndex","_isNil","handleClick","e","id","_this$state","indeterminate","isInputClick","_invoke","current","target","isLabelClick","isRootClick","hasId","isClickFromMouse","handleChange","handleMouseDown","_this$state2","defaultPrevented","preventDefault","handleMouseUp","_this$state3","setIndeterminate","_set","_inheritsLoose","_proto","prototype","componentDidMount","componentDidUpdate","render","_this$props3","label","slider","toggle","type","_this$state4","unhandled","_partitionHTMLProps","partitionHTMLProps","htmlProps","htmlInputAttrs","htmlInputProps","labelElement","createHTMLLabel","htmlFor","autoGenerateKey","onMouseDown","onMouseUp","Ref","innerRef","Component","autoControlledProps"],"sourceRoot":""}